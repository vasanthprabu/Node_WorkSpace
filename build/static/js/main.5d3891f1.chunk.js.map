{"version":3,"sources":["components/CCS-Login.js","NavBar.js","components/AnalysisHistory.js","constant.js","components/Ticket-Master-Intensify.js","theme/palette.js","components/ByShiftReport.js","components/ByStatusReport.js","components/ByCategoryMixReport.js","components/ByTypeReport.js","components/ByTicketAgeReport.js","components/ByExecuteSummaryReport.js","components/Charts-Showcase.js","components/Maintenance.js","components/BugReport.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","CCSSignIn","classes","history","useHistory","useForm","handleSubmit","register","errors","React","useEffect","console","log","onSubmit","values","store","set","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","TextField","required","fullWidth","id","label","name","autoComplete","ref","pattern","value","message","autoFocus","helperText","email","validate","password","FormControlLabel","control","Checkbox","Button","Box","mt","createMuiTheme","overrides","MuiMenuItem","fontSize","MuiSelect","MuiListItem","textDecoration","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","content","paddingLeft","flexGrow","title","textAlign","NavBar","useTheme","useState","open","setOpen","anchorEl","setAnchorEl","openanchorEl","Boolean","handleClose","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Drawer","direction","Divider","List","map","text","index","ListItem","button","key","props","to","ListItemIcon","ListItemText","primary","style","toDBDateTime","datetimestring","moment","format","closeButton","right","top","viewFormaValidationDioTitle","AnalysisHistory","formvalidationopen","setFormValidationOpen","formvalidationerrors","dropListValues","setDropListValues","handleAlertFormValidationClose","TransitionUp","forwardRef","Slide","team_type_lookup","client","Object_Name","Object_Key","Object_Value","owner","state","columns","field","render","rowData","StartDateandTime","EndDateandTime","lookup","data","setData","fetch","then","droplist","json","droplistresult","catch","error","finally","updateData","newData","onChange","MuiPaper","MuiTableCell","MuiDialog","paperWidthSm","maxWidth","MuiPopover","MuiInputBase","options","paging","components","EditField","TeamType","Ticket_Status","Owner","WorkNotes","editable","isEditable","Edit_Flag","isDeletable","onRowAddCancelled","onRowUpdateCancelled","onRowAdd","isAfter","isSameOrBefore","alert","Promise","reject","resolve","onRowUpdate","oldData","dataUpdate","tableData","local","onRowDelete","dataDelete","splice","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","TransitionComponent","DialogTitle","DialogContent","DialogContentText","DialogActions","TransitionLeft","emptyObj","ID","Ticket_Date","Ticket_Shift","TicketType","TicketNumber","Bug_ID","Ms_TicketNumber","Ticket_Category","Ticket_SubCategory","Ticket_Priority","Ticket_Owner","Ticket_Team_Type","Ticket_State","Customer_Name","IncidentShortSummary","IncidentDetail","AnalysisWorkNotes","ResolutionNotes","Ticket_EndDateTime","Ticket_Age","emptyDropListObj","MuiTableRow","MuiExpansionPanel","border","boxShadow","borderBottom","ExpansionPanelSummary","marginBottom","minHeight","MuiExpansionPanelDetails","MuiTypography","body1","MuiExpansionPanelSummary","MuiDialogTitle","paperWidthMd","div_root","size","table","minWidth","TableCell_custom","visuallyHidden","clip","overflow","checkButton","viewDioTitle","TableRowBackgroundColor","formControl","formErrorColor","formPaddingTop","paddingTop","selectEmpty","datetextField","timetextField","GridPaddingTop","tableRow","hover","custom_fontsize","icon_color","icon_add_color","fromDBDate","datestring","TicketMasterIntensify","rows","setRows","isLoading","setIsLoading","isDeleteLoading","setIsDeleteLoading","isLoadingDialog","setIsLoadingDialog","selected","setSelected","selectedRow","setSelectedRow","setRowData","addopen","setAddOpen","editopen","setEditOpen","alertopen","setAlertOpen","viewopen","setViewOpen","alerteditopen","setAlertEditOpen","alertdeleteopen","setAlertDeleteOpen","alertdeletesuccessopen","setAlertDeleteSuccessOpen","alerterroropen","setAlertErrorOpen","daterangeopen","setDateRangeOpen","histrows","setHistRows","expanded","analysisHistory","setAnalysisHistory","setFormValidationErrors","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","histhours","setFieldValue","updated","toUpperCase","startsWith","setFields","obj","setAnalysisHistoryData","i","length","diff","add","days","hours","minutes","seconds","handleTicketDateChange","date","handleTicketStartDateChange","datetime","handleTicketEndDateChange","HandleAddTicketmasterClose","HandleDateExportmasterClose","handleAlertClose","TicketMasterLoadingAfterSuccess","handleAlertDeleteClose","handleAlertDeleteSuccessClose","handleViewClose","handleEditClose","handleAlertEditClose","handleErrorAlertClickOpen","handleErrorAlertClickClose","res","result","row","Object","assign","assignEmptyValues","assignEmptyDropListValues","handleFormSubmit","preventDefault","handleAddSubmitClose","handleEditSubmitClose","JSON","stringify","method","body","headers","response","histresponse","histresult","handleDeleteSubmitClose","items","success","downloadURL","url","iframe","document","getElementById","createElement","appendChild","src","downloadSummaryURL","ResolutionHistoryData","ticketNum","LinearProgress","defaultSort","isNaN","get","age","split","onRowClick","evt","handleEditClickOpen","onSearchChange","e","exportButton","exportTitle","exportFileName","exportDelimiter","exportCsv","_","datacsv","columnscsvtemp","columnDef","CsvBuilder","setDelimeter","setColumns","addRows","exportFile","selection","filtering","headerStyle","rowStyle","localization","pagination","labelDisplayedRows","nRowsSelected","exportName","header","actions","emptyDataSourceMessage","filterRow","filterTooltip","tooltip","icon","temp","object","property","replace","HandleDeleteTicketmasterOpen","isFreeAction","fromdate","hour","minute","second","millisecond","todate","HandleExportSummary","noValidate","scroll","utils","DateFnsUtils","justify","onError","InputProps","input","FormControl","InputLabel","Select","labelId","target","c","FormHelperText","Tooltip","HandleDuplicateTicketCheck","readOnly","hidden","ampm","InputLabelProps","shrink","multiline","rowsMax","inputProps","step","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","zeroMinWidth","KeyboardButtonProps","white","black","contrastText","dark","colors","indigo","light","blue","green","info","warning","orange","red","chart1","cyan","chart2","teal","chart3","deepOrange","blueGrey","link","background","default","divider","chartContainer","stats","device","chartFont","ByShiftReport","dataArray","AMERICAS","APAC","EMEIA","bardata","labels","datasets","responsive","maintainAspectRatio","legend","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","borderColor","titleFontColor","bodyFontColor","footerFontColor","layout","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","devices","Card","CardHeader","action","CardContent","deviceIcon","ByStatusReport","L1Count","L2Count","OpenCount","ClosedCount","OnHoldCount","VendorCount","CSOCount","AwitingCount","CancelledCount","staticdata","hoverBorderColor","animation","cutoutPercentage","ByCategoryMixReport","bulkupd","compenrol","userenrol","domainenrol","approvision","deluser","cpsync","compissue","optin","mftotp","datacoll","inviteredem","tenantrest","emailupn","natcloud","userdel","domainchk","azure","alertsite","bigeye","hpbpm","mixdata","ByTypeReport","TYPECASE","TYPEINCIDENT","piedata","ByTicketAgeReport","lessthan_5","lessthan_10","lessthan_15","lessthan_20","lessthan_24","morethan_24","elementhour","ByExecuteSummaryReport","gridPaddingTop","ChartsShowcase","statusReportData","setStatusReportData","ageReportData","setAgeReportData","fetchChartData","h5","MuiCardHeader","disableToolbar","lg","xl","MuiDialogContent","Object_User","Object_Date","Maintenance","tabvalue","setTabValue","HandleAddMaintenanceClose","HandleEditMaintenanceClose","handleTabChange","newValue","MaintenanceLoadingAfterSuccess","pageSize","pageSizeOptions","HandleDeleteMaintenanceOpen","TabContext","TabList","Tab","TabPanel","toDBDate","Date_Raised","Bug_Id","Snow_No","Description","Type","Status","Hotfix_Date","Production_Date","Comments","BugReport","formerrorvalidationopen","setFormErrorValidationOpen","handleBugDateChange","handleHotfixDateChange","handleProductionDateChange","handleAlertErrorFormValidationClose","HandleAddBugReportClose","HandleEditBugReportClose","isSameOrAfter","Home","path","exact","App","window","location","hostname","match","ReactDOM","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d3891f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm} from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport store from 'store';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://ey.com/\">\r\n        Internal EY\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(/EY.gif)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function CCSSignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const onSubmit = values => {\r\n   store.set('loggedIn',true);\r\n   history.push('/TicketMaster');\r\n  }\r\n  React.useEffect(() => console.log(errors), [errors])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"invalid email address\"\r\n                }\r\n              })}\r\n              autoFocus\r\n              helperText={errors.email  && errors.email.message}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              ref={register({\r\n                validate: value => value !== \"admin\"\r\n              })}\r\n              helperText={errors.password && <p>This field is required</p>}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport { Link as RouterLink,Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme,createMuiTheme,MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Users from '@material-ui/icons/PeopleAlt'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport PieChartRoundedIcon from '@material-ui/icons/PieChartRounded';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport store from 'store';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction ListItemLink(props) {\r\n    const { icon, primary, to } = props;\r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <li>\r\n        <ListItem button component={renderLink}>\r\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n          <ListItemText primary={primary} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  ListItemLink.propTypes = {\r\n    icon: PropTypes.element,\r\n    primary: PropTypes.string.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n  };\r\n\r\n  \r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    // Style sheet name ⚛️\r\n    MuiMenuItem: {\r\n      // Name of the rule\r\n      root: {\r\n        // Some CSS\r\n        fontSize: 15,\r\n      },\r\n    },\r\n    MuiSelect:{\r\n      root: {\r\n        // Some CSS\r\n        fontSize: 15,\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": { textDecoration: \"underline\" }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      paddingLeft:'3%',\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    \r\n    title: {\r\n      flexGrow: 1,\r\n      textAlign:\"left\",\r\n    },\r\n  }));\r\n\r\nfunction NavBar() {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openanchorEl = Boolean(anchorEl);\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n  const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n \r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    setAnchorEl(null);\r\n    store.set('loggedIn',false);\r\n    history.push('/login');\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n      \r\n    <div className={classes.root}>\r\n    <CssBaseline />\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: open,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, {\r\n            [classes.hide]: open,\r\n          })}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          CCS Request Tracker\r\n        </Typography>\r\n        <div>\r\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={openanchorEl}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleLogOut}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n    <MuiThemeProvider theme={theme}>\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: open,\r\n        [classes.drawerClose]: !open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n\r\n      {/* <Paper elevation={0}>\r\n          <List aria-label=\"main mailbox folders\">\r\n            <ListItemLink to=\"/TicketMaster\" primary=\"Ticket Master\" icon={<MailIcon />} />\r\n            <ListItemLink to=\"/ChartsShowcase\" primary=\"Charts Showcase\" icon={<InboxIcon />} />\r\n          </List>\r\n          <Divider />\r\n          <List aria-label=\"secondary mailbox folders\">\r\n          <ListItemLink to=\"/ChartsShowcase\" primary=\"Maintenance\" icon={<Users />} />\r\n          </List>\r\n      </Paper> */}\r\n\r\n      \r\n       <List>\r\n          {['TicketMaster', 'ChartsShowcase'].map((text, index) => (\r\n            <ListItem button key={text} component={props => <Link {...props} to={text} />}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <PieChartRoundedIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n        \r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['BugReport','Maintenance'].map((text, index) => (\r\n            <ListItem button key={text} component={props => <Link {...props} to={text}  />}>\r\n              <ListItemIcon>{index % 2 === 0 ? <BugReportIcon /> : <Users />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> \r\n\r\n    </Drawer>\r\n    </MuiThemeProvider>\r\n    <main style={{padding:\"0px\"}} className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n    </main>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport MaterialTable,{ MTableEditField } from 'material-table';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport * as moment from 'moment';\r\nimport \r\n    { \r\n        TextField,\r\n        InputLabel,\r\n        MenuItem,\r\n        FormControl,\r\n        Select,\r\n        FormHelperText,\r\n        Dialog,\r\n        DialogTitle,\r\n        DialogContent,\r\n        DialogContentText,\r\n        DialogActions,\r\n        IconButton,\r\n        Button\r\n        \r\n    } from '@material-ui/core';\r\nimport \r\n    {   createMuiTheme,\r\n        makeStyles,\r\n        MuiThemeProvider\r\n    } from '@material-ui/core/styles';\r\n    import { maintenance_droplist_url } from \"../constant\";\r\n\r\n    \r\n    function toDBDateTime(datetimestring){\r\n      return moment(datetimestring,'YYYY-MM-DDTHH:mm:ss').format('DD-MM-YYYYTHH:mm:ss')\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n      closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: 4,\r\n        color: theme.palette.grey[500],\r\n      },\r\n      viewFormaValidationDioTitle:{\r\n        backgroundColor:'#e53935',\r\n        color:'#fffff !important',\r\n      },\r\n    }))\r\n\r\nexport default function AnalysisHistory(props) {\r\n  const classes = useStyles();\r\n  const [formvalidationopen,setFormValidationOpen] = React.useState(false);\r\n  const [formvalidationerrors,setFormValidationErrors] = React.useState({});\r\n  const [dropListValues, setDropListValues] = React.useState([]);\r\n\r\n  const handleAlertFormValidationClose = () =>{\r\n    setFormValidationOpen(false);\r\n  }\r\n  //Alert transition left\r\n  const TransitionUp = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  //dynamic lookup drop list values -- team type\r\n  const team_type_lookup = {};\r\n  dropListValues.map(client => {\r\n      const { Object_Name, Object_Key, Object_Value } = client;\r\n      if( Object_Name === 'Ticket_Team_Type')\r\n      team_type_lookup[ Object_Key ] = Object_Value\r\n  })\r\n  \r\n  //dynamic lookup drop list values -- owner\r\n  const owner = {};\r\n  dropListValues.map(client => {\r\n      const { Object_Name, Object_Key, Object_Value } = client;\r\n      if( Object_Name === 'Ticket_Owner')\r\n      owner[ Object_Key ] = Object_Value\r\n  })\r\n\r\n   //dynamic lookup drop list values -- owner\r\n   const state = {};\r\n   dropListValues.map(client => {\r\n       const { Object_Name, Object_Key, Object_Value } = client;\r\n       if( Object_Name === 'Ticket_State')\r\n       state[ Object_Key ] = Object_Value\r\n   })\r\n\r\n\r\n    const columns = [\r\n      { title: 'StDate', field: 'StartDateandTime',id:'StDate',type: 'datetime' ,width: '15%',required:true, render: rowData =>{\r\n        return toDBDateTime(rowData.StartDateandTime);\r\n      }},\r\n      { title: 'EndDate', field: 'EndDateandTime',id:'EndDate',type: 'datetime',width: '15%',required:true, render: rowData =>{\r\n        //console.log(\"Fromatting date -->\"+rowData.EndDateandTime);\r\n        if(rowData.EndDateandTime !=='')\r\n        return toDBDateTime(rowData.EndDateandTime);\r\n        else\r\n        return rowData.EndDateandTime;\r\n      }},\r\n      { title: 'Type', field: 'TeamType' ,\r\n      lookup: team_type_lookup,width: '5%',required:true},\r\n      { title: 'Status', field: 'Ticket_Status',width: '20%',lookup:state,required:true},\r\n      { title: 'Owner', field: 'Owner',width: '20%',lookup:owner,required:true},\r\n      { title: 'WorkNotes', field: 'WorkNotes',width: '25%'},\r\n    ];\r\n    const [data, setData] = React.useState(props.data);\r\n    const [editflag, setEditFlag] = React.useState(true);\r\n    const [deleteflag, setDeleteFlag] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        setData(props.data);\r\n        fetch(maintenance_droplist_url)\r\n        .then(droplist => droplist.json())\r\n        .then((droplistresult)=>{\r\n          //console.log(\"Onload droplist before set values ->\"+JSON.stringify(droplistresult));\r\n          setDropListValues(droplistresult);\r\n        }).catch((error) =>{\r\n          console.log(error);\r\n        })\r\n        .finally(()=>{\r\n        })\r\n    }, [props.data]);\r\n\r\n    const updateData = (newData) => {\r\n        setData(newData);\r\n        //console.log(\"New Data\"+JSON.stringify(newData));\r\n        console.log(props);\r\n        props.onChange(newData);\r\n    };\r\n\r\n  \r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n          // Style sheet name ⚛️\r\n          MuiMenuItem: {\r\n            // Name of the rule\r\n            root: {\r\n              // Some CSS\r\n              fontSize: 15,\r\n            },\r\n          },\r\n          MuiPaper:{\r\n              root:{\r\n                width:'100%'\r\n              }\r\n          },\r\n          MuiTableCell:{\r\n              root:{\r\n                  padding:2\r\n              }\r\n          },\r\n          MuiDialog:{\r\n             paperWidthSm:{\r\n                 maxWidth:345,\r\n             }\r\n          },\r\n          MuiPopover:{\r\n              paper:{\r\n                  maxWidth:'10%'\r\n              }\r\n          },\r\n          MuiInputBase:{\r\n            root:{\r\n              width:'100%'\r\n            }\r\n          }\r\n        },\r\n      });\r\n\r\n    return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MaterialTable\r\n        title=\"Analysis History\"\r\n        width=\"100%\"\r\n        columns={columns}\r\n        data={data}\r\n        options={{\r\n            paging: false\r\n          }}\r\n        components={{\r\n            EditField: (props) => {\r\n              if (props.rowData.EndDateandTime === \"\") {\r\n                return (<MTableEditField {...props} error/>);\r\n              }\r\n              else if(props.rowData.TeamType === \"\"){\r\n                return (<MTableEditField {...props} error/>);\r\n              }\r\n              else if(props.rowData.Ticket_Status === \"\"){\r\n                return (<MTableEditField {...props} error/>);\r\n              }\r\n              else if(props.rowData.Owner === \"\"){\r\n                return (<MTableEditField {...props} error/>);\r\n              }\r\n              else if(props.rowData.WorkNotes === \"\"){\r\n                return (<MTableEditField {...props} error/>);\r\n              }\r\n              return (<MTableEditField {...props} />);\r\n            },\r\n          }}\r\n        editable={{\r\n          isEditable: data => data.Edit_Flag !== \"E\",\r\n          isDeletable: data => data.Edit_Flag !== \"E\",\r\n           //isEditable:data => true,\r\n           //isDeletable:data => true,\r\n          onRowAddCancelled:data => {\r\n          \r\n          },\r\n          onRowUpdateCancelled: data => {\r\n           \r\n          },\r\n          onRowAdd: newData =>{\r\n            if(!moment(newData.EndDateandTime).isAfter(moment(newData.StartDateandTime))){\r\n              alert(\"Ticket end date should be equal or after start date\");\r\n              return Promise.reject();\r\n            }\r\n            else if(!moment(newData.EndDateandTime).isSameOrBefore(moment().format('YYYY-MM-DDTHH:mm:ss'))){\r\n              alert(\"Ticket end date should not be future date\");\r\n              return Promise.reject();\r\n            }\r\n            else if(newData.TeamType === \"\"){\r\n              alert(\"Please select analysis history ticket type\");\r\n              return Promise.reject();\r\n            }\r\n            else if(newData.Ticket_Status === \"\"){\r\n              alert(\"Please select analysis history ticket status\");\r\n              return Promise.reject();\r\n            }\r\n            else if(newData.Owner === \"\"){\r\n              alert(\"Please select analysis history ticket owner\");\r\n              return Promise.reject();\r\n            }\r\n            else if(newData.WorkNotes === \"\"){\r\n              alert(\"Please enter analysis history work notes\");\r\n              return Promise.reject();\r\n            }\r\n            else{\r\n              updateData([...data, newData]); \r\n              return Promise.resolve();\r\n            }\r\n\r\n          },\r\n          onRowUpdate: (newData, oldData) =>\r\n           { \r\n              const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                newData.EndDateandTime = moment.utc(newData.EndDateandTime).local().format();\r\n                dataUpdate[index] = newData;\r\n                if(!moment(newData.EndDateandTime).isAfter(moment(newData.StartDateandTime))){\r\n                  alert(\"Ticket end date should be equal or after start date\");\r\n                  return Promise.reject();\r\n                }\r\n                else if(!moment(newData.EndDateandTime).isSameOrBefore(moment().format('YYYY-MM-DDTHH:mm:ss'))){\r\n                  alert(\"Ticket end date should not be future date\");\r\n                  return Promise.reject();\r\n                }\r\n                else if(newData.TeamType === \"\"){\r\n                  alert(\"Please select analysis history ticket type\");\r\n                  return Promise.reject();\r\n                }\r\n                else if(newData.Ticket_Status === \"\"){\r\n                  alert(\"Please select analysis history ticket status\");\r\n                  return Promise.reject();\r\n                }\r\n                else if(newData.Owner === \"\"){\r\n                  alert(\"Please select analysis history ticket owner\");\r\n                  return Promise.reject();\r\n                }\r\n                else if(newData.WorkNotes === \"\"){\r\n                  alert(\"Please enter analysis history work notes\");\r\n                  return Promise.reject();\r\n                }\r\n                else{\r\n                updateData([...dataUpdate]);\r\n                return Promise.resolve();\r\n              }\r\n           },\r\n          onRowDelete: oldData => {\r\n            const dataDelete = [...data];\r\n            const index = oldData.tableData.id;\r\n            dataDelete.splice(index, 1);\r\n            updateData([...dataDelete]);\r\n            return Promise.resolve()\r\n          }\r\n        }}\r\n      />\r\n      {/* custom alert dialog content -->start here */}\r\n    <Dialog\r\n    disableBackdropClick\r\n    disableEscapeKeyDown\r\n    open={formvalidationopen}\r\n    onClose={handleAlertFormValidationClose}\r\n    aria-labelledby=\"alert-dialog-title\"\r\n    aria-describedby=\"alert-dialog-description\"\r\n    maxWidth = {'sm'}\r\n    fullWidth={true}\r\n    TransitionComponent={TransitionUp}\r\n  >\r\n    <DialogTitle id=\"alert-dialog-title\" className={classes.viewFormaValidationDioTitle}>\r\n    {formvalidationerrors.title}\r\n    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertFormValidationClose}>\r\n      <CloseIcon />\r\n    </IconButton>\r\n    </DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-description\">\r\n       {formvalidationerrors.message}\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n    <Button autoFocus onClick={handleAlertFormValidationClose}  variant=\"contained\" color=\"primary\">\r\n        Ok\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  {/* custom alert dialog content -->end here */}\r\n      </MuiThemeProvider>\r\n      \r\n    )\r\n    \r\n  }\r\n  ","export const app_url = \"\"\r\nexport const ticketmaster_url = app_url+\"/api/ticketmaster/\"\r\nexport const ticketmasterduplicate_url = app_url+\"/api/ticketmaster/duplicate/\"\r\nexport const resolutionhistory_url = app_url+\"/api/resolutionhistory/\"\r\nexport const chart_status_url = app_url+\"/api/chartsapi/status/\"\r\nexport const chart_age_url = app_url+\"/api/chartsapi/age/\"\r\nexport const chart_shift_url = app_url+\"/api/chartsapi/shift/\"\r\nexport const downloadallapi_url = app_url+\"/api/downloadallapi/\"\r\nexport const downloadsummaryapi_url = app_url+\"/api/downloadsummaryapi/\"\r\nexport const maintenance_url = app_url+\"/api/maintenance/\"\r\nexport const maintenance_droplist_url = app_url+\"/api/maintenance/droplist\"\r\nexport const bugreport_url = app_url+\"/api/bugreport/\"\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport \r\n    { \r\n        makeStyles,\r\n        createMuiTheme,\r\n        MuiThemeProvider\r\n    } from '@material-ui/core/styles';\r\nimport \r\n    { \r\n        LinearProgress,\r\n        IconButton,\r\n        Button,\r\n        Dialog,\r\n        TextField,\r\n        DialogTitle,\r\n        DialogContent,\r\n        DialogContentText,\r\n        DialogActions,\r\n        Table,\r\n        TableBody,\r\n        TableCell,\r\n        TableContainer,\r\n        TableHead,\r\n        TableRow,\r\n        Typography,\r\n        Paper,\r\n        Grid,\r\n        InputLabel,\r\n        MenuItem,\r\n        FormControl,\r\n        Select,\r\n        FormHelperText\r\n    } from '@material-ui/core';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport { KeyboardDateTimePicker,KeyboardDatePicker,MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport AnalysisHistory from './AnalysisHistory';\r\nimport { ticketmaster_url,ticketmasterduplicate_url,resolutionhistory_url,downloadallapi_url,downloadsummaryapi_url,maintenance_droplist_url } from \"../constant\";\r\nimport { CsvBuilder } from 'filefy';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VerticalAlignBottomIcon from '@material-ui/icons/VerticalAlignBottom';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { formatDistance } from 'date-fns';\r\n\r\n//Alert transition left\r\nconst TransitionLeft = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\n//Alert transition left\r\nconst TransitionUp = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst emptyObj = {\r\nID :'',\r\nTicket_Date:'',\r\nTicket_Shift:'',\r\nTicketType:'',\r\nTicketNumber:'',\r\nStartDateandTime:'',\r\nBug_ID:'',\r\nMs_TicketNumber:'',\r\nTicket_Category:'',\r\nTicket_SubCategory:'',\r\nTicket_Priority:'',\r\nTicket_Owner:'',\r\nTicket_Team_Type:'',\r\nTicket_State:'',\r\nCustomer_Name:'',\r\nIncidentShortSummary:'',\r\nIncidentDetail:'',\r\nAnalysisWorkNotes:'',\r\nResolutionNotes:'',\r\nTicket_EndDateTime:'',\r\nTicket_Age:'',\r\n}\r\n\r\nconst emptyDropListObj = {\r\nObject_Name:'',\r\nObject_Key:'',\r\nObject_Value:''\r\n}\r\n\r\nconst assignEmptyValues = (rows)=> {\r\n  return rows.map(row => Object.assign({},emptyObj,row));\r\n}\r\n\r\nconst assignEmptyDropListValues = (dropListValues)=> {\r\n  return dropListValues.map(row => Object.assign({},emptyDropListObj,row));\r\n}\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n      // Style sheet name ⚛️\r\n      MuiMenuItem: {\r\n        // Name of the rule\r\n        root: {\r\n          // Some CSS\r\n          fontSize: 15,\r\n        },\r\n      },\r\n      MuiSelect:{\r\n        root: {\r\n          // Some CSS\r\n          fontSize: 15,\r\n        },\r\n      },\r\n      MuiTableCell: {\r\n        root: {\r\n         padding:2,\r\n        }\r\n      },\r\n      MuiTableRow: {\r\n        root: {\r\n          \"&:hover\": {\r\n            backgroundColor: \"rgba(33, 150, 243, 0.5)\"\r\n          }\r\n        }\r\n      },\r\n      MuiExpansionPanel :{\r\n        root: {\r\n          fontSize: 11,\r\n          border: '1px solid rgba(0, 0, 0, .125)',\r\n          boxShadow: 'none',\r\n          '&:not(:last-child)': {\r\n            borderBottom: 0,\r\n          },\r\n          '&:before': {\r\n            display: 'none',\r\n          },\r\n          '&$expanded': {\r\n            margin: 'auto',\r\n          },\r\n        },\r\n      },\r\n      ExpansionPanelSummary :{\r\n        root: {\r\n          fontSize: 11,\r\n          backgroundColor: 'rgba(0, 0, 0, .03)',\r\n          borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n          marginBottom: -1,\r\n          minHeight: 56,\r\n          '&$expanded': {\r\n            minHeight: 44,\r\n          },\r\n        },\r\n        content: {\r\n          fontSize: 11,\r\n          margin:10,\r\n          '&$expanded': {\r\n            margin: 10,\r\n          },\r\n        },\r\n      },\r\n      MuiExpansionPanelDetails:{\r\n        root: {\r\n          padding:'2px',\r\n          fontSize: 11\r\n        }\r\n      },\r\n      MuiTypography:{\r\n        body1:{\r\n          fontSize: 15,\r\n        }\r\n      },\r\n      MuiExpansionPanelSummary:{\r\n        root:{\r\n          padding:2\r\n        },\r\n        content: {\r\n          fontSize: 11,\r\n          margin:10,\r\n          '&$expanded': {\r\n            margin: 5,\r\n          },\r\n        },\r\n      },\r\n      MuiDialogTitle:{\r\n        root:{\r\n          padding: '10px 10px',\r\n          color:'#ffffff'\r\n\r\n        }\r\n      },\r\n      MuiDialog:{\r\n        paperWidthMd:{\r\n          maxWidth:1200\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      paddingLeft:'5%',\r\n    },\r\n    div_root:{\r\n      width: '100%',\r\n      size:'sm',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    TableCell_custom:{\r\n      padding:5,\r\n      fontSize:12\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: 4,\r\n      color: theme.palette.grey[500],\r\n    },\r\n    checkButton: {\r\n      marginTop:36,\r\n      padding:0\r\n    },\r\n    viewDioTitle:{\r\n      backgroundColor:'#3f51b5',\r\n      color:'#fffff !important',\r\n    },\r\n    viewFormaValidationDioTitle:{\r\n      backgroundColor:'#e53935',\r\n      color:'#fffff !important',\r\n    },\r\n    TableRowBackgroundColor:{\r\n      '&:hover': {\r\n        backgroundColor: '#fab700',\r\n      },\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n      fontSize:15\r\n    },\r\n    formErrorColor: {\r\n     color:\"red\"\r\n    },\r\n    formPaddingTop:{\r\n      paddingTop:11\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    datetextField: {\r\n      paddingTop:'10px',\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 271,\r\n    },\r\n    timetextField: {\r\n      paddingTop:'10px',\r\n    },\r\n    GridPaddingTop:{\r\n      paddingTop:'36px'\r\n    },\r\n    tableRow: {\r\n      hover: {\r\n         backgroundColor:'#eed35a',\r\n        }\r\n     },\r\n     custom_fontsize:{\r\n      fontSize:15\r\n     },\r\n     icon_color:{\r\n       color:\"#f50057\"\r\n     },\r\n     icon_add_color:{\r\n      color:\"#1976d2\"\r\n    }\r\n     \r\n  }));\r\n\r\n  function fromDBDate(datestring) {\r\n    return moment(datestring,'DD-MM-YYYY').format('YYYY-MM-DD')\r\n  }\r\n  \r\n  function toDBDate(datestring) {\r\n    return moment(datestring,'YYYY-MM-DD').format('DD-MM-YYYY')\r\n  }\r\n  \r\n  function fromDBDateTime(datetimestring){\r\n    return moment(datetimestring,'DD-MM-YYYYTHH:mm:ss').format('YYYY-MM-DDTTHH:mm:ss')\r\n  }\r\n  \r\n  function toDBDateTime(datetimestring){\r\n    return moment(datetimestring,'YYYY-MM-DDTHH:mm:ss').format('DD-MM-YYYYTHH:mm:ss')\r\n  }\r\n\r\n\r\nexport default function TicketMasterIntensify() {\r\n    const classes = useStyles();\r\n    const [rows,setRows] = React.useState([]);\r\n    const [isLoading,setIsLoading] = React.useState(false);\r\n    const [isDeleteLoading,setIsDeleteLoading] = React.useState(false);\r\n    const [isLoadingDialog,setIsLoadingDialog] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [selectedRow, setSelectedRow] = React.useState(null);\r\n    const [rowData,setRowData] = React.useState({});\r\n    const [addopen, setAddOpen] = React.useState(false);\r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const [alertopen,setAlertOpen] = React.useState(false);\r\n    const [viewopen, setViewOpen] = React.useState(false);\r\n    const [alerteditopen,setAlertEditOpen] = React.useState(false);\r\n    const [alertdeleteopen,setAlertDeleteOpen] = React.useState(false);\r\n    const [alertdeletesuccessopen,setAlertDeleteSuccessOpen] = React.useState(false);\r\n    const [alerterroropen,setAlertErrorOpen] = React.useState(false);\r\n    const [daterangeopen,setDateRangeOpen] = React.useState(false);\r\n    const [histrows,setHistRows] = React.useState([]);\r\n    const [expanded] = React.useState('panel1');\r\n    const [analysisHistory,setAnalysisHistory] = React.useState([]);\r\n    const [formvalidationopen,setFormValidationOpen] = React.useState(false);\r\n    const [formvalidationerrors,setFormValidationErrors] = React.useState({});\r\n    const [selectedFromDate, setSelectedFromDate] = React.useState({});\r\n    const [selectedToDate, setSelectedToDate] = React.useState({});\r\n    const [dropListValues, setDropListValues] = React.useState([]);\r\n\r\n    var histhours = '';\r\n    //set states for all form elements - start here\r\n    const setFieldValue = (name,value) =>{\r\n    const updated = {\r\n      ...rowData,\r\n      [name] : value\r\n    }\r\n\r\n    if( name === \"TicketNumber\" && value.toUpperCase().startsWith('INC')){\r\n      updated.TicketType = 'INCIDENT';\r\n    }\r\n    else if(name === \"TicketNumber\" && value.toUpperCase().startsWith('')){\r\n      updated.TicketType = 'CASE';\r\n    }\r\n    setRowData(updated);\r\n  }\r\n  \r\n  //set states for all form elements - end here\r\n\r\n  const setFields = (obj) =>{\r\n    //console.log(\"Change drop list values -->\"+JSON.stringify(obj))\r\n    setRowData({\r\n      ...rowData,\r\n      ...obj\r\n    })\r\n  }\r\n\r\n  const setAnalysisHistoryData = (data) =>{\r\n    setAnalysisHistory(data);\r\n    let duration = moment.duration();\r\n    for (var i = 0; i < data.length; i++) {\r\n      histhours = moment(data[i].EndDateandTime,\"YYYY-MM-DDTHH:mm:ss\").diff(moment(data[i].StartDateandTime,\"YYYY-MM-DDTHH:mm:ss\"));\r\n      duration.add(histhours);\r\n    } \r\n    const updated = {\r\n      ...rowData,\r\n      ['Ticket_Age'] : duration.days()*24+duration.hours()+\":\"+duration.minutes()+\":\"+duration.seconds(),\r\n      ['Ticket_Team_Type'] : data[data.length-1].TeamType,\r\n      ['Ticket_State'] : data[data.length-1].Ticket_Status,\r\n      ['Ticket_Owner'] : data[data.length-1].Owner,\r\n      ['Ticket_EndDateTime'] : moment(data[data.length-1].EndDateandTime,\"YYYY-MM-DDTHH:mm:ss\").format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    }\r\n    setRowData(updated);\r\n    }\r\n\r\n    const handleTicketDateChange = (date) => {\r\n      setFieldValue(\"Ticket_Date\",toDBDate(date))\r\n    };\r\n\r\n    const handleTicketStartDateChange = (datetime) =>{\r\n      setFieldValue(\"StartDateandTime\",datetime);\r\n      setAnalysisHistory([{\r\n        \"StartDateandTime\":moment(datetime).format('YYYY-MM-DDTHH:mm:ss'),\r\n        \"EndDateandTime\":'',\r\n        \"TeamType\":'',\r\n        \"Ticket_Status\":'',\r\n        \"Owner\":'',\r\n        \"WorkNotes\":''\r\n      }]);\r\n    }\r\n\r\n    const handleTicketEndDateChange = (datetime) =>{\r\n      setFieldValue(\"Ticket_EndDateTime\",datetime)\r\n    }\r\n\r\n\r\n\r\n    const HandleAddTicketmasterOpen = (selectedRow) =>{\r\n        //console.log(selectedRow);\r\n        setRowData(Object.assign({},emptyObj,{\r\n          \"Ticket_Date\":moment().format('DD-MM-YYYY'),\r\n          \"StartDateandTime\":moment().format('YYYY-MM-DDTHH:mm:ss'),\r\n          \"TicketType\":\"\",\r\n          \"Ticket_Priority\":\"Low\"\r\n          }));\r\n        setAnalysisHistory([{\r\n          \"StartDateandTime\":moment().format('YYYY-MM-DDTHH:mm:ss'),\r\n          \"EndDateandTime\":'',\r\n          \"TeamType\":'',\r\n          \"Ticket_Status\":'',\r\n          \"Owner\":'',\r\n          \"WorkNotes\":''\r\n        }]);\r\n        setAddOpen(true);\r\n    }\r\n\r\n    const HandleDeleteTicketmasterOpen = (selectedRow) =>{\r\n      var temp = '';\r\n      for (var i = 0; i < selectedRow.length; i++) {\r\n        var object = selectedRow[i];\r\n        for (var property in object) {\r\n          if(property === 'ID'){\r\n            temp = temp += object[property]+',';\r\n          }\r\n        }\r\n      }\r\n      setSelected(temp.replace(/,\\s*$/, \"\"))\r\n      setAlertDeleteOpen(true);\r\n    }\r\n\r\n    const HandleAddTicketmasterClose = () =>{\r\n        setAddOpen(false);\r\n    }\r\n\r\n    const HandleDateExportmasterClose = () =>{\r\n      setDateRangeOpen(false);\r\n    }\r\n\r\n    const handleAlertClickOpen = () => {\r\n        setAlertOpen(true);\r\n      };\r\n\r\n    const handleAlertClose = () => {\r\n        TicketMasterLoadingAfterSuccess();\r\n        console.log(rowData);\r\n        setAlertOpen(false);\r\n      };\r\n    \r\n      const handleAlertDeleteClose = () =>{\r\n        setAlertDeleteOpen(false);\r\n      }\r\n\r\n      const handleAlertDeleteCancelClose = () =>{\r\n        setAlertDeleteOpen(false);\r\n      }\r\n    \r\n      const handleAlertDeleteSuccessOpen = () =>{\r\n        setAlertDeleteSuccessOpen(true);\r\n      }\r\n    \r\n      const handleAlertDeleteSuccessClose = () =>{\r\n        setAlertDeleteSuccessOpen(false);\r\n      }\r\n\r\n      const handleViewClickOpen = (rowData) => {\r\n        setRowData(rowData);\r\n        setViewOpen(true);\r\n        ResolutionHistoryData(rowData.TicketNumber);\r\n      };\r\n  \r\n      const handleViewClose = () => {\r\n       setViewOpen(false);\r\n      };\r\n\r\n      const handleEditClickOpen = (selectedRow,rowData) => {\r\n        setSelectedRow(selectedRow)\r\n        setRowData(rowData);\r\n        console.log(\"Edit Open data\"+JSON.stringify(rowData));\r\n        setEditOpen(true);\r\n        ResolutionHistoryData(rowData.TicketNumber);\r\n        \r\n      };\r\n    \r\n      const handleEditClose = () => {\r\n        setEditOpen(false);\r\n      };\r\n\r\n      const handleAlertEditClickOpen = () => {\r\n        setAlertEditOpen(true);\r\n      };\r\n\r\n      const handleAlertEditClose = () => {\r\n        TicketMasterLoadingAfterSuccess();\r\n        console.log(rowData);\r\n        setAlertEditOpen(false);\r\n      };\r\n\r\n      const handleErrorAlertClickOpen = () => {\r\n        setAlertErrorOpen(true);\r\n      };\r\n      const handleErrorAlertClickClose = () => {\r\n        setAlertErrorOpen(false);\r\n      };\r\n\r\n      const handleFromDateChange = (date) => {\r\n        setSelectedFromDate(date);\r\n      };\r\n    \r\n      const handleToDateChange = (date) => {\r\n        setSelectedToDate(date);\r\n      };\r\n  \r\n   // Ajax Call Starts here\r\n   React.useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(ticketmaster_url)\r\n    .then(res => res.json())\r\n    .then((result)=>{\r\n      setRows(assignEmptyValues(result));\r\n        fetch(maintenance_droplist_url)\r\n        .then(droplist => droplist.json())\r\n        .then((droplistresult)=>{\r\n          //console.log(\"Onload droplist before set values ->\"+JSON.stringify(droplistresult));\r\n          setDropListValues(assignEmptyDropListValues(droplistresult));\r\n        }).catch((error) =>{\r\n          console.log(error);\r\n        })\r\n        .finally(()=>{\r\n          setIsLoading(false);\r\n        })\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoading(false);\r\n    })\r\n  },[]\r\n  )\r\n\r\n  const handleAlertFormValidationClose = () =>{\r\n    setFormValidationOpen(false);\r\n  }\r\n\r\n  const resolutionHistoryFieldValidation = (status,history) =>{\r\n    if((status !== \"Assigned to L1\") && history === \"\"){\r\n      return true;\r\n    }\r\n    else if((status !== \"Closed\") && history === \"\"){\r\n      return true;\r\n    }\r\n    else if((status !== \"Open\") && history === \"\"){\r\n      return true;\r\n    }\r\n    else if((status !== \"Cancelled\") && history === \"\"){\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const handleFormSubmit = (event,title) =>{\r\n    if(rowData.Ticket_Shift === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket shift\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.TicketNumber === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please enter valid ticket number\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.TicketType === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket type\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.StartDateandTime === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select valid start date & time\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_Category === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket category\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_SubCategory === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket sub category\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_Priority === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket priority\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.IncidentShortSummary === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please enter incident short summary\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.IncidentDetail === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please  enter incident detail\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_EndDateTime === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please ticket end date & time in analysis history\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_Team_Type === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select team type in analysis history\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_State === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket status in analysis history\"})\r\n      event.preventDefault();\r\n    }\r\n    else if(rowData.Ticket_Owner === \"\"){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please select ticket owner in analysis history\"})\r\n      event.preventDefault();\r\n    }\r\n    else if((rowData.Ticket_State === \"Assigned to L1\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Cancelled\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Closed\" && !rowData.ResolutionNotes)){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please enter resolution notes for the day\"})\r\n      event.preventDefault();\r\n    }\r\n    else if((!moment(rowData.Ticket_EndDateTime).isAfter(moment(rowData.StartDateandTime)))){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Ticket end date should be equal or after start date\"})\r\n      event.preventDefault();\r\n    }\r\n    \r\n    else{\r\n      if(title === \"Add\")\r\n      handleAddSubmitClose();\r\n      else\r\n      handleEditSubmitClose();\r\n    }\r\n  }\r\n\r\n  const HandleDuplicateTicketCheck = (event) =>{\r\n     if(rowData.TicketNumber === \"\")\r\n     {\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please enter valid ticket number\"})\r\n      event.preventDefault();\r\n    }\r\n    else\r\n    {\r\n    setIsLoadingDialog(true);\r\n    fetch(ticketmasterduplicate_url+rowData.TicketNumber, {\r\n      method: \"GET\"\r\n    }) \r\n    .then(response =>  response.json())\r\n    .then(result => {\r\n      if(result.error === 409)\r\n      {\r\n        setFormValidationOpen(true);\r\n        setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"This Ticket or Incident already avaliable . kindly add your entry in resoution history\"})\r\n        \r\n      }\r\n      else\r\n      {\r\n        handleErrorAlertClickOpen();\r\n      }\r\n    })\r\n    .catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoadingDialog(false);\r\n    });\r\n  }\r\n  }\r\n\r\n  const handleAddSubmitClose = () => {\r\n    console.log(\"Add submit data\"+JSON.stringify(rowData));\r\n    console.log(\"Before Analysis History data\"+JSON.stringify(analysisHistory));\r\n    setIsLoading(true);\r\n    fetch(ticketmaster_url, {\r\n      method: \"POST\", \r\n      body: JSON.stringify(rowData), \r\n      headers: { \r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n      } \r\n    }) \r\n    .then(response =>  response.json())\r\n    .then(result => {\r\n      console.log(\"Add Ticket master success\",result.error);\r\n      if(result.error === 409){\r\n        handleErrorAlertClickOpen();\r\n      }else{\r\n        fetch(resolutionhistory_url+rowData.TicketNumber, { \r\n        method: \"POST\",\r\n        body: JSON.stringify(analysisHistory), \r\n        headers: { \r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        } \r\n      }) \r\n      .then(histresponse => histresponse.json()) \r\n      .then(histresult => {\r\n        handleAlertClickOpen();\r\n        console.log(\"Add Resolution History success\",histresult);\r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      }\r\n     // handleAlertClickOpen();\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoading(false);\r\n    }); \r\n    setAddOpen(false);\r\n}\r\n\r\nconst handleEditSubmitClose = () => {\r\n      console.log(\"Edit submit data ->\"+JSON.stringify(rowData));\r\n      setIsLoading(true);\r\n      fetch(ticketmaster_url+rowData.ID, { \r\n        method: \"PATCH\", \r\n        body: JSON.stringify(rowData), \r\n        headers: { \r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        } \r\n      }) \r\n      .then(response => response.json()) \r\n      .then(result => {\r\n        //handleAlertEditClickOpen()\r\n        //console.log(\"Update success\",result);\r\n        setIsLoading(true);\r\n        fetch(resolutionhistory_url+rowData.TicketNumber, { \r\n            method: \"POST\", \r\n            body: JSON.stringify(analysisHistory),\r\n            headers: { \r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            } \r\n          }) \r\n          .then(histresponse => histresponse.json()) \r\n          .then(histresult => {\r\n            handleAlertEditClickOpen();\r\n            console.log(\"Update Resolution History success\",histresult);\r\n          }).catch((error) =>{\r\n            console.log(error);\r\n          })\r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      .finally(()=>{\r\n        setIsLoading(false);\r\n      }); \r\n  setEditOpen(false);\r\n\r\n}\r\n\r\n\r\n\r\nconst handleDeleteSubmitClose = (items) => {\r\n  //alert(\"selected check box items\"+items.selected);\r\n  setIsDeleteLoading(true);\r\n  fetch(ticketmaster_url+items.selected, { \r\n    method: \"DELETE\",\r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response => response.json()) \r\n  .then(result => {\r\n    if(result.success === 1){\r\n      TicketMasterLoadingAfterSuccess();\r\n      setAlertDeleteOpen(false);\r\n      handleAlertDeleteSuccessOpen();\r\n      setSelected([]);\r\n    }else{\r\n      alert(\"Technical error occurred. please contact admin team.\")\r\n    }\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsDeleteLoading(false);\r\n  });        \r\n}\r\n\r\n\r\n\r\nconst TicketMasterLoadingAfterSuccess = () =>{\r\n    setIsLoading(true);\r\n    fetch(ticketmaster_url)\r\n    .then(res => res.json())\r\n    .then((result)=>{\r\n      setRows(result);\r\n      \r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoading(false);\r\n    })\r\n  }\r\n\r\n  const HandleExportAll= () => {\r\n    setIsLoading(true);\r\n    downloadURL(downloadallapi_url);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const HandleExportSummary= () => {\r\n    var fromdate = moment().local()\r\n    fromdate.set({hour:0,minute:0,second:0,millisecond:0});\r\n    var todate = moment().local()\r\n    todate.set({hour:23,minute:59,second:0,millisecond:0});\r\n    setSelectedFromDate(fromdate.format('YYYY-MM-DDTHH:mm:ss'));\r\n    setSelectedToDate(todate.format('YYYY-MM-DDTHH:mm:ss'));\r\n    setDateRangeOpen(true);\r\n  }\r\n\r\n  const handleFormExportSubmit = () =>{\r\n    setIsLoading(true);\r\n    console.log(\"From date\"+moment(selectedFromDate).format('YYYY-MM-DDTHH:mm:ss')+\"To date \"+moment(selectedToDate).format('YYYY-MM-DDTHH:mm:ss'));\r\n    downloadSummaryURL(downloadsummaryapi_url+moment(selectedFromDate).format('YYYY-MM-DDTHH:mm:ss')+\",\"+moment(selectedToDate).format('YYYY-MM-DDTHH:mm:ss'));\r\n    setDateRangeOpen(false);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  var downloadURL = function downloadURL(url) {\r\n    var hiddenIFrameID = 'hiddenDownloader',\r\n        iframe = document.getElementById(hiddenIFrameID);\r\n    if (iframe === null) {\r\n        iframe = document.createElement('iframe');\r\n        iframe.id = hiddenIFrameID;\r\n        iframe.style.display = 'none';\r\n        document.body.appendChild(iframe);\r\n    }\r\n    iframe.src = url;\r\n};\r\n\r\nvar downloadSummaryURL = function downloadURL(url) {\r\n  var hiddenIFrameID = 'hiddenDownloaderSummary',\r\n      iframe = document.getElementById(hiddenIFrameID);\r\n  if (iframe === null) {\r\n      iframe = document.createElement('iframe');\r\n      iframe.id = hiddenIFrameID;\r\n      iframe.style.display = 'none';\r\n      document.body.appendChild(iframe);\r\n  }\r\n  iframe.src = url;\r\n};\r\n\r\n\r\n\r\n  const ResolutionHistoryData = (ticketNum) =>{\r\n    setIsLoadingDialog(true);\r\n    fetch(resolutionhistory_url+ticketNum)\r\n    .then(res => res.json())\r\n    .then((result)=>{\r\n      setHistRows(result);\r\n      setAnalysisHistory(result);\r\n      console.log(histrows);\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoadingDialog(false);\r\n    })\r\n  }\r\n\r\n\r\n  //Ajax Call Ends here\r\n\r\n    return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n    {\r\n        isLoading && \r\n        <LinearProgress color=\"secondary\"/>\r\n    }\r\n      <MaterialTable\r\n        title=\"Daily Ticket Report\"\r\n        columns={[\r\n          // { title: 'ID', field: 'ID',width: '3%'},\r\n          { title: 'Date', field: 'Ticket_Date' ,width: '10%',defaultSort:'desc'},\r\n          { title: 'Ticket', field: 'TicketNumber',width: '10%'},\r\n          { title: 'State',field: 'Ticket_State',width: '15%'},\r\n          { title: 'Priority',field: 'Ticket_Priority',width: '5%'},\r\n          { title: 'Age',field: 'Ticket_Age',width: '5%', render: rowData =>{\r\n            if(!isNaN(moment(rowData.Ticket_Age,'HH:mm:ss').get('hours'))){\r\n              //Case 1 : if SLA < 120 hrs then True\r\n              var age = rowData.Ticket_Age.split(\":\");\r\n              if(rowData.Ticket_Priority === 'Low' && age[0] > 96){  \r\n                return rowData.Ticket_Age+\"^\";\r\n              }\r\n              else if(rowData.Ticket_Priority === 'Medium' && age[0] > 15){\r\n                return rowData.Ticket_Age+\"^\";\r\n              }\r\n              else if(rowData.Ticket_Priority === 'High' && age[0] > 7){\r\n                return rowData.Ticket_Age+\"^\";\r\n              }\r\n              else if(rowData.Ticket_Priority === 'Critical' && age[0] > 3){\r\n                return rowData.Ticket_Age+\"^\";\r\n              }\r\n              else{\r\n                return rowData.Ticket_Age;\r\n              }\r\n            }\r\n            else{\r\n              return rowData.Ticket_Age;\r\n            }\r\n          } },\r\n          { title: 'Type',field: 'Ticket_Team_Type',width: '3%'},\r\n          { title: 'Owner',field: 'Ticket_Owner',width: '16%'},\r\n          // { title: 'Category',field: 'Ticket_Category',width: '15%'},\r\n          { title: 'Sub-Category',field: 'Ticket_SubCategory',width: '14%'},\r\n          { title: 'VendorNo#',field: 'Ms_TicketNumber',width: '5%'},\r\n          { title: 'BugNo#',field: 'Bug_ID',width: '5%'},\r\n          { title: 'CustomerName',field: 'Customer_Name',width: '12%'},\r\n          // { title: 'View',field: 'view',render: tablerowData => <img alt=\"\" src={process.env.PUBLIC_URL+\"/view_icon.png\"} onClick={(event) => { handleViewClickOpen(tablerowData) }} style={{width: 35, height:35}}/>, filtering: false,width: '2%', sorting: false,export:false   },\r\n          // { title: 'Edit',field: 'edit',render: tablerowData => <img alt=\"\" src={process.env.PUBLIC_URL+\"/edit_icon.png\"} onClick={(event) => { handleEditClickOpen(tablerowData)}} style={{width: 30, height:25}}/> , filtering: false ,width: '2%', sorting: false,export:false  },\r\n        ]}\r\n        data={rows}\r\n        onRowClick={((evt, selectedRow) => handleEditClickOpen(selectedRow.tableData.id,selectedRow))}\r\n        onSearchChange={(e) => console.log(\"search changed: \" + e)}\r\n        options={{\r\n          exportButton: true,\r\n          exportTitle:\"Export As Summary\",\r\n          exportFileName:'summaryreport',\r\n          exportDelimiter:',',\r\n          exportCsv: (_,datacsv) => {\r\n             var columnscsvtemp = [{\"field\":\"ID\"},{\"field\":\"Ticket_Date\"},{\"field\":\"TicketNumber\"},{\"field\":\"Ticket_State\"},{\"field\":\"Bug_ID\"},{\"field\":\"Ms_TicketNumber\"},{\"field\":\"StartDateandTime\"},{\"field\":\"Ticket_Category\"},{\"field\":\"Ticket_SubCategory\"},{\"field\":\"Ticket_Priority\"},{\"field\":\"Ticket_Owner\"},{\"field\":\"Ticket_Team_Type\"},{\"field\":\"Ticket_State\"},{\"field\":\"Customer_Name\"},{\"field\":\"IncidentShortSummary\"},{\"field\":\"IncidentDetail\"},{\"field\":\"AnalysisWorkNotes\"},{\"field\":\"ResolutionNotes\"},{\"field\":\"Ticket_EndDateTime\"},{\"field\":\"Ticket_Age\"}];\r\n             const data = datacsv.map(rowData =>\r\n              columnscsvtemp.map(columnDef => rowData[columnDef.field])\r\n            );\r\n          const builder = new CsvBuilder(('ticketsummaryreport' || 'data') + '.xls')\r\n          .setDelimeter(',')\r\n          .setColumns(columnscsvtemp.map(columnDef => columnDef.field))\r\n          .addRows(data)\r\n          .exportFile();\r\n          },\r\n          selection: true,\r\n          filtering: true,\r\n          headerStyle: {\r\n            backgroundColor: '#5c6fd6',\r\n            color: '#FFF'\r\n          },\r\n          rowStyle: rowData => {\r\n            if(!isNaN(moment(rowData.Ticket_Age,'HH:mm:ss').get('hours'))){\r\n              //Case 1 : if SLA < 120 hrs then True\r\n              var age = rowData.Ticket_Age.split(\":\");\r\n              //console.log(\"Age value -->\"+age[0]);\r\n              if(rowData.Ticket_Priority === 'Low' && age[0] > 120){  \r\n                return { backgroundColor: '#ff3333' };\r\n              }\r\n              // else if(rowData.Ticket_Priority === 'Low' &&  96 < age[0]){\r\n              //   return { backgroundColor:'#ffd633' };\r\n              // }\r\n              else if(rowData.Ticket_Priority === 'Medium' && age[0] > 18){\r\n                return { backgroundColor: '#ff3333' }\r\n              }\r\n              else if(rowData.Ticket_Priority === 'High' && age[0] > 8){\r\n                return { backgroundColor: '#ff3333' };\r\n              }\r\n              else if(rowData.Ticket_Priority === 'Critical' && age[0] > 4){\r\n                return { backgroundColor: '#ff3333' };\r\n              }\r\n              else{\r\n                return {backgroundColor: '#ffffff'};\r\n              }\r\n            }\r\n            else{\r\n              return {backgroundColor: '#ffffff'};\r\n            }\r\n            \r\n          },\r\n          rowStyle: rowData => ({\r\n            backgroundColor: (selectedRow === rowData.tableData.id) ? '#ddcd74' : '#ffffff'\r\n          }),\r\n          pageSize:10,\r\n          pageSizeOptions:[10,20,30,40,50]  \r\n        }}\r\n        localization={{\r\n          pagination: {\r\n              labelDisplayedRows: '{from}-{to} of {count}'\r\n          },\r\n          toolbar: {\r\n              nRowsSelected: '{0} row(s) selected',\r\n              exportName:'Summary as Excel',\r\n              exportFileName:'CCS_Ticket_Report.xlsx'\r\n          },\r\n          header: {\r\n              actions: 'Actions'\r\n          },\r\n          body: {\r\n              emptyDataSourceMessage: 'No records to display',\r\n              filterRow: {\r\n                  filterTooltip: 'Filter'\r\n              }\r\n          }\r\n      }}\r\n        actions={[\r\n          {\r\n            tooltip: 'Remove All Selected Users',\r\n            icon: 'delete',\r\n            onClick: (evt, data) => { HandleDeleteTicketmasterOpen(data) }\r\n          },\r\n          {\r\n            icon: () => { return <SaveIcon className={classes.icon_color}/> },\r\n            tooltip: 'Export As Date Range Summary',\r\n            isFreeAction: true,\r\n            onClick: (event) => { HandleExportSummary() }\r\n          },\r\n          {\r\n            icon: () => { return <VerticalAlignBottomIcon className={classes.icon_color}/> },\r\n            tooltip: 'Export As Deatiled',\r\n            isFreeAction: true,\r\n            onClick: (event) => { HandleExportAll() }\r\n          },\r\n          {\r\n            icon: () => { return <AddCircleIcon className={classes.icon_add_color}/> },\r\n            tooltip: 'Add New Ticket',\r\n            isFreeAction: true,\r\n            onClick: (event) => { HandleAddTicketmasterOpen() }\r\n          }\r\n        ]}\r\n      />\r\n\r\n      {/* add dialog content -->start here */}\r\n      <form noValidate>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'md'} \r\n        onClose={HandleAddTicketmasterClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={addopen}\r\n        >\r\n        <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Add \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddTicketmasterClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent style={{padding:'0px 20px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n          <Grid container spacing={2}>\r\n             <Grid item xs={3}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      error={!rowData.Ticket_Date}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"Ticket Date\"\r\n                      value = {fromDBDate(rowData.Ticket_Date)}\r\n                      onChange={handleTicketDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.Ticket_Date &&  \"Please enter valid start date.\"}\r\n\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Shift && <span>Ticket Shift *</span>}{!rowData.Ticket_Shift && <span className={classes.formErrorColor}>Ticket Shift *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Shift}\r\n                onChange={(event)=>setFieldValue('Ticket_Shift',event.target.value)}\r\n                label=\"Ticket Shift *\"\r\n                required\r\n                error={!rowData.Ticket_Shift}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Ticket Shift *</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Shift')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Shift && <FormHelperText className={classes.formErrorColor}>Please select ticket shift.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={2}>\r\n             <TextField\r\n                error={!rowData.TicketNumber}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"TicketNumber\"\r\n                label=\"Ticket Number\"\r\n                name=\"TicketNumber\"\r\n                autoComplete=\"TicketNumber\"\r\n                value={rowData.TicketNumber}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('TicketNumber',event.target.value)}\r\n                helperText={!rowData.TicketNumber &&  \"Please enter valid ticket No.\"}\r\n            />\r\n           \r\n             </Grid>\r\n             <Grid item xs={1}>\r\n             <Tooltip title=\"Check duplicate ticket\">\r\n             <IconButton aria-label=\"Check duplicate ticket number\" className={classes.checkButton} onClick={(event)=>HandleDuplicateTicketCheck(event)}>\r\n            < CheckCircleIcon/>\r\n            </IconButton>\r\n            </Tooltip>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.TicketType && <span>Ticket Type *</span>}{!rowData.TicketType && <span className={classes.formErrorColor}>Ticket Type *</span>}</InputLabel>\r\n              <Select\r\n                error={!rowData.TicketType}\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"TicketType\"\r\n                value={rowData.TicketType}\r\n                onChange={(event)=>setFieldValue('TicketType',event.target.value)}\r\n                label=\"Ticket Type *\"\r\n                required\r\n                readOnly\r\n                hidden =\"true\"\r\n              >\r\n              <MenuItem value=\"\">\r\n                  <em>Ticket Type</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Type')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.TicketType && <FormHelperText className={classes.formErrorColor}>Please select ticket type.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDateTimePicker\r\n                      error={!rowData.StartDateandTime}\r\n                      //variant=\"inline\"\r\n                      ampm={false}\r\n                      label=\"Ticket Start Date & time\"\r\n                      value={rowData.StartDateandTime}\r\n                      onChange={handleTicketStartDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.StartDateandTime &&  \"Please enter valid start date & time.\"}\r\n                    />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                  \r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Category && <span>Ticket Category *</span>}{!rowData.Ticket_Category && <span className={classes.formErrorColor}>Ticket Category *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Category}\r\n                onChange={(event)=>{\r\n                  setFields({'Ticket_Category':event.target.value,Ticket_SubCategory:\"None\"})\r\n                }}\r\n                label=\"Ticket Category\"\r\n                required\r\n              >\r\n              <MenuItem value=\"None\">\r\n                  <em>Ticket Category</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Category')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Category && <FormHelperText className={classes.formErrorColor}>Please select ticket category.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_SubCategory && <span>Ticket SubCategory *</span>}{!rowData.Ticket_SubCategory && <span className={classes.formErrorColor}>Ticket SubCategory *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_SubCategory}\r\n                onChange={(event)=>setFieldValue('Ticket_SubCategory',event.target.value)}\r\n                label=\"Ticket Category\"\r\n                required\r\n              >\r\n              <MenuItem value=\"None\">\r\n                  <em>Ticket SubCategory</em>\r\n              </MenuItem>\r\n              {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Category_'+rowData.Ticket_Category)\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_SubCategory && <FormHelperText className={classes.formErrorColor}>Please select ticket sub category.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Priority && <span>Ticket Priority *</span>}{!rowData.Ticket_Priority && <span className={classes.formErrorColor}>Ticket Priority *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Priority}\r\n                onChange={(event)=>setFieldValue('Ticket_Priority',event.target.value)}\r\n                label=\"Ticket Priority\"\r\n                required\r\n              >\r\n              <MenuItem value=\"\">\r\n                  <em>Ticket Priority</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Priority')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Priority && <FormHelperText className={classes.formErrorColor}>Please select ticket priority.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n            \r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={!rowData.IncidentShortSummary}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"IncidentShortSummary\"\r\n                label=\"Incident Short Summary\"\r\n                name=\"IncidentShortSummary\"\r\n                autoComplete=\"IncidentShortSummary\"\r\n                value={rowData.IncidentShortSummary}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('IncidentShortSummary',event.target.value)}\r\n                helperText={!rowData.IncidentShortSummary &&  \"Please enter incident short summary.\"}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={!rowData.IncidentDetail}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"IncidentDetail\"\r\n                label=\"Incident Detail\"\r\n                name=\"IncidentDetail\"\r\n                autoComplete=\"IncidentDetail\"\r\n                value={rowData.IncidentDetail}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('IncidentDetail',event.target.value)}\r\n                helperText={!rowData.IncidentDetail &&  \"Please enter incident details.\"}\r\n          />\r\n             </Grid>\r\n\r\n             <Grid item xs={12}>\r\n              <MuiExpansionPanel square expanded={expanded === 'panel1'}>\r\n                  <MuiExpansionPanelDetails>\r\n                     <AnalysisHistory data={analysisHistory} onChange={data => setAnalysisHistoryData(data)} />\r\n                  </MuiExpansionPanelDetails>\r\n              </MuiExpansionPanel>\r\n             </Grid>\r\n\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={(rowData.Ticket_State === \"Assigned to L1\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Cancelled\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Closed\" && !rowData.ResolutionNotes)}\r\n                margin=\"normal\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"ResolutionNotes\"\r\n                label=\"Resolution Notes\"\r\n                name=\"ResolutionNotes\"\r\n                autoComplete=\"ResolutionNotes\"\r\n                value={rowData.ResolutionNotes}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('ResolutionNotes',event.target.value)}\r\n                helperText={!rowData.ResolutionNotes &&  \"Please enter resolution notes.\"}\r\n          />\r\n          \r\n             </Grid>\r\n            \r\n             \r\n             <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Bug_ID\"\r\n                label=\"Bug ID\"\r\n                name=\"Bug_ID\"\r\n                autoComplete=\"Bug_ID\"\r\n                value={rowData.Bug_ID}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Bug_ID',event.target.value)}\r\n          />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Ms_TicketNumber\"\r\n                label=\"Vendor Ticket Number\"\r\n                name=\"Ms_TicketNumber\"\r\n                autoComplete=\"Ms_TicketNumber\"\r\n                value={rowData.Ms_TicketNumber}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Ms_TicketNumber',event.target.value)}\r\n          />\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Customer_Name\"\r\n                label=\"Customer Name\"\r\n                name=\"Customer_Name\"\r\n                autoComplete=\"Customer_Name\"\r\n                value={rowData.Customer_Name}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Customer_Name',event.target.value)}\r\n          />\r\n            </Grid> \r\n             <Grid item xs={3}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDateTimePicker\r\n                      error={!rowData.StartDateandTime}\r\n                      //variant=\"inline\"\r\n                      ampm={false}\r\n                      label=\"Ticket EndDate & Time\"\r\n                      value={rowData.Ticket_EndDateTime}\r\n                      onChange={handleTicketEndDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                        readOnly:true\r\n                      }}\r\n                      helperText={!rowData.StartDateandTime &&  \"Please enter valid end date & time.\"}\r\n                    />\r\n                  </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n              <TextField\r\n                id=\"Add_Ticket_Age\"\r\n                label=\"Ticket Age\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name=\"Ticket_Age\"\r\n                value={rowData.Ticket_Age}\r\n                className={classes.timetextField}\r\n                onChange={(event)=>setFieldValue('Ticket_Age',event.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                  fontSize:15,\r\n                  paddingTop:20,\r\n                  readOnly:true,\r\n                }}\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n           \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleAddTicketmasterClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={(event)=>handleFormSubmit(event,\"Add\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </form>\r\n      {/* add dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        open={alertopen}\r\n        onClose={handleAlertClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {\"Success\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            New Ticket Added Successfully ! \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAlertClose} color=\"primary\" autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={alertdeleteopen}\r\n        onClose={handleAlertDeleteClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n        position = \"top\"\r\n        TransitionComponent={TransitionLeft}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle} >\r\n        {\"Delete\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertDeleteClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        {\r\n            isDeleteLoading && \r\n            <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure want to delete selected ticket(s) ? \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertDeleteCancelClose} variant=\"contained\" color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button variant=\"contained\" value={selected} onClick={()=>handleDeleteSubmitClose({selected})} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={alertdeletesuccessopen}\r\n        onClose={handleAlertDeleteSuccessClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {\"Delete Success\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertDeleteSuccessClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           Selected Ticket Master Deleted Successfully ! \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertDeleteSuccessClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={alerterroropen}\r\n        onClose={handleErrorAlertClickClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {\"No Duplicate Ticket\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleErrorAlertClickClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Ticket Number not available you can proceed .\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleErrorAlertClickClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={formvalidationopen}\r\n        onClose={handleAlertFormValidationClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewFormaValidationDioTitle}>\r\n        {formvalidationerrors.title}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertFormValidationClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {formvalidationerrors.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertFormValidationClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n\r\n      {/* view dialog content -->start here */}\r\n      <Dialog \r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'md'} \r\n        onClose={handleViewClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={viewopen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        >\r\n      \r\n        <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          View\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleViewClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <DialogContent style={{padding:'0px 20px'}}>\r\n        \r\n        <div className={classes.div_root}>\r\n          <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_Date\"\r\n                label=\"Ticket Date\"\r\n                name=\"Ticket_Date\"\r\n                autoComplete=\"Ticket_Date\"\r\n                autoFocus\r\n                value={fromDBDate(rowData.Ticket_Date)}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_Date',event.target.value)}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_Shift\"\r\n                label=\"Ticket Shift\"\r\n                name=\"Ticket_Shift\"\r\n                autoComplete=\"Ticket_Shift\"\r\n                value={rowData.Ticket_Shift}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_Shift',event.target.value)}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"TicketNumber\"\r\n                label=\"Ticket Number\"\r\n                name=\"TicketNumber\"\r\n                autoComplete=\"TicketNumber\"\r\n                \r\n                value={rowData.TicketNumber}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('TicketNumber',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"TicketType\"\r\n                label=\"Ticket Type\"\r\n                name=\"TicketType\"\r\n                autoComplete=\"TicketType\"\r\n                value={rowData.TicketType}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('TicketType',event.target.value)}\r\n            />\r\n             </Grid>\r\n             \r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"StartDateandTime\"\r\n                label=\"StartDate & Time\"\r\n                name=\"StartDateandTime\"\r\n                autoComplete=\"StartDateandTime\"\r\n                \r\n                value={toDBDateTime(rowData.StartDateandTime)}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('StartDateandTime',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_Category\"\r\n                label=\"Ticket Category\"\r\n                name=\"Ticket_Category\"\r\n                autoComplete=\"Ticket_Category\"\r\n                \r\n                value={rowData.Ticket_Category}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_Category',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_SubCategory\"\r\n                label=\"Ticket SubCategory\"\r\n                name=\"Ticket_SubCategory\"\r\n                autoComplete=\"Ticket_SubCategory\"\r\n                \r\n                value={rowData.Ticket_SubCategory}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_SubCategory',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_Priority\"\r\n                label=\"Ticket Priority\"\r\n                name=\"Ticket_Priority\"\r\n                autoComplete=\"Ticket_Priority\"\r\n                \r\n                value={rowData.Ticket_Priority}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_Priority',event.target.value)}\r\n            />\r\n             </Grid>\r\n\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"IncidentShortSummary\"\r\n                label=\"Incident Short Summary\"\r\n                name=\"IncidentShortSummary\"\r\n                autoComplete=\"IncidentShortSummary\"\r\n                value={rowData.IncidentShortSummary}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('IncidentShortSummary',event.target.value)}\r\n            />\r\n             \r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"IncidentDetail\"\r\n                label=\"Incident Detail\"\r\n                name=\"IncidentDetail\"\r\n                autoComplete=\"IncidentDetail\"\r\n                value={rowData.IncidentDetail}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('IncidentDetail',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <MuiExpansionPanel square expanded={expanded === 'panel1'}>\r\n                  <MuiExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                  <Grid xs={11}> <Typography style={{color:'#3f51b5'}}><b>Analysis History</b></Typography> </Grid> \r\n                  <Grid xs={1}>\r\n                  </Grid>\r\n                  </MuiExpansionPanelSummary>\r\n                  <MuiExpansionPanelDetails>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"left\" style={{width: '15%'}} className={classes.TableCell_custom}><b>StartDate</b></TableCell>\r\n                              <TableCell align=\"left\" style={{width: '15%'}} className={classes.TableCell_custom}><b>EndDate</b></TableCell>\r\n                              <TableCell align=\"left\" style={{width: '15%'}} className={classes.TableCell_custom}><b>Status</b></TableCell>\r\n                              <TableCell align=\"left\" style={{width: '5%'}} className={classes.TableCell_custom}><b>Team</b></TableCell>\r\n                              <TableCell align=\"left\" style={{width: '15%'}} className={classes.TableCell_custom}><b>Owner</b></TableCell>\r\n                              <TableCell align=\"left\" style={{width: '35%'}} className={classes.TableCell_custom}><b>Work Notes</b></TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {histrows.map((row) => (\r\n                              <TableRow key={row.ID}>\r\n                                <TableCell  component=\"th\" scope=\"row\" style={{width: '15%'}} className={classes.TableCell_custom}>{toDBDateTime(row.StartDateandTime)}</TableCell>\r\n                                <TableCell  component=\"th\" scope=\"row\" style={{width: '15%'}} className={classes.TableCell_custom}>{toDBDateTime(row.EndDateandTime)}</TableCell>\r\n                                <TableCell style={{width: '15%'}} className={classes.TableCell_custom}>{row.Ticket_Status}</TableCell>\r\n                                <TableCell style={{width: '5%'}} className={classes.TableCell_custom}>{row.TeamType}</TableCell>\r\n                                <TableCell style={{width: '15%'}} className={classes.TableCell_custom}>{row.Owner}</TableCell>\r\n                                <TableCell style={{width: '35%'}} className={classes.TableCell_custom}>{row.WorkNotes}</TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                  </MuiExpansionPanelDetails>\r\n              </MuiExpansionPanel>\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"ResolutionNotes\"\r\n                label=\"Resolution Notes\"\r\n                name=\"ResolutionNotes\"\r\n                autoComplete=\"ResolutionNotes\"\r\n                value={rowData.ResolutionNotes}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('ResolutionNotes',event.target.value)}\r\n            />\r\n             </Grid>\r\n\r\n             <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n              \r\n                fullWidth\r\n                id=\"Bug_ID\"\r\n                label=\"Bug ID\"\r\n                name=\"Bug_ID\"\r\n                autoComplete=\"Bug_ID\"\r\n                value={rowData.Bug_ID}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Bug_ID',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n              \r\n                fullWidth\r\n                id=\"Ms_TicketNumber\"\r\n                label=\"Vendor Ticket Number\"\r\n                name=\"Ms_TicketNumber\"\r\n                autoComplete=\"Ms_TicketNumber\"\r\n                value={rowData.Ms_TicketNumber}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ms_TicketNumber',event.target.value)}\r\n            />\r\n             </Grid>\r\n\r\n             <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n              \r\n                fullWidth\r\n                id=\"Customer_Name\"\r\n                label=\"Customer Name\"\r\n                name=\"Customer_Name\"\r\n                autoComplete=\"Customer_Name\"\r\n                value={rowData.Customer_Name}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Customer_Name',event.target.value)}\r\n            />\r\n             </Grid>\r\n             \r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                \r\n                fullWidth\r\n                id=\"Ticket_EndDateTime\"\r\n                label=\"Ticket EndDateTime\"\r\n                name=\"Ticket_EndDateTime\"\r\n                autoComplete=\"Ticket_EndDateTime\"\r\n                \r\n                value={toDBDateTime(rowData.Ticket_EndDateTime)}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_EndDateTime',event.target.value)}\r\n            />\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Ticket_Age\"\r\n                label=\"Ticket Age\"\r\n                name=\"Ticket_Age\"\r\n                autoComplete=\"Ticket_Age\"\r\n                \r\n                value={rowData.Ticket_Age}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n            // onChange={(event)=>setFieldValue('Ticket_Age',event.target.value)}\r\n            />\r\n             </Grid>\r\n          </Grid>    \r\n        </div>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleViewClose} variant=\"contained\" color=\"primary\">\r\n              Close\r\n            </Button>\r\n             {/* <Button onClick={handleSubmitClose} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>  */}\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* view dialog content -->end here */}\r\n\r\n\r\n       {/* edit dialog content -->start here */}\r\n       <Dialog \r\n       scroll={'paper'} \r\n       fullWidth={true} \r\n       maxWidth = {'md'} \r\n       onClose={handleEditClose} \r\n       aria-labelledby=\"customized-dialog-title\" \r\n       open={editopen}\r\n       disableBackdropClick\r\n       disableEscapeKeyDown\r\n       >\r\n        <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Edit\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleEditClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent style={{padding:'0px 20px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n          <Grid container spacing={2} zeroMinWidth={true}>\r\n             <Grid item xs={3} zeroMinWidth>\r\n             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      error={!rowData.Ticket_Date}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"Ticket Date\"\r\n                      value = {fromDBDate(rowData.Ticket_Date)}\r\n                      onChange={handleTicketDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.Ticket_Date &&  \"Please enter valid start date.\"}\r\n\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n             </Grid>\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Shift && <span>Ticket Shift *</span>}{!rowData.Ticket_Shift && <span className={classes.formErrorColor}>Ticket Shift *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Shift}\r\n                onChange={(event)=>setFieldValue('Ticket_Shift',event.target.value)}\r\n                label=\"Ticket Shift\"\r\n                required\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Ticket Shift</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Shift')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Shift && <FormHelperText className={classes.formErrorColor}>Please select ticket shift.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n             <TextField\r\n                error={!rowData.TicketNumber}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"TicketNumber\"\r\n                label=\"Ticket Number\"\r\n                name=\"TicketNumber\"\r\n                autoComplete=\"TicketNumber\"\r\n                value={rowData.TicketNumber}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('TicketNumber',event.target.value)}\r\n                helperText={!rowData.TicketNumber &&  \"Please enter valid ticket No.\"}\r\n            />\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.TicketType && <span>Ticket Type *</span>}{!rowData.TicketType && <span className={classes.formErrorColor}>Ticket Type *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"TicketType\"\r\n                value={rowData.TicketType}\r\n                onChange={(event)=>setFieldValue('TicketType',event.target.value)}\r\n                label=\"Ticket Type\"\r\n                required\r\n                readOnly\r\n              >\r\n              <MenuItem value=\"\">\r\n                  <em>Ticket Type</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Type')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.TicketType && <FormHelperText className={classes.formErrorColor}>Please select ticket type.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDateTimePicker\r\n                      error={!rowData.StartDateandTime}\r\n                      //variant=\"inline\"\r\n                      ampm={false}\r\n                      label=\"Ticket Start Date & time\"\r\n                      value={rowData.StartDateandTime}\r\n                      onChange={handleTicketStartDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.StartDateandTime &&  \"Please enter valid start date & time.\"}\r\n                    />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n\r\n              </Grid>\r\n\r\n             \r\n              <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Category && <span>Ticket Category *</span>}{!rowData.Ticket_Category && <span className={classes.formErrorColor}>Ticket Category *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Category}\r\n                onChange={(event)=>{\r\n                  setFields({'Ticket_Category':event.target.value,Ticket_SubCategory:\"None\"})\r\n                }}\r\n                label=\"Ticket Category\"\r\n                required\r\n              >\r\n              <MenuItem value=\"None\">\r\n                  <em>Ticket Category</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Category')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Category && <FormHelperText className={classes.formErrorColor}>Please select ticket category.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_SubCategory && <span>Ticket SubCategory *</span>}{!rowData.Ticket_SubCategory && <span className={classes.formErrorColor}>Ticket SubCategory *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_SubCategory}\r\n                onChange={(event)=>setFieldValue('Ticket_SubCategory',event.target.value)}\r\n                label=\"Ticket Category\"\r\n                required\r\n              >\r\n              <MenuItem value=\"None\">\r\n                  <em>Ticket SubCategory</em>\r\n              </MenuItem>\r\n              {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Category_'+rowData.Ticket_Category)\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              \r\n              </Select>\r\n              {!rowData.Ticket_SubCategory && <FormHelperText className={classes.formErrorColor}>Please select ticket sub category.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n\r\n             <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Ticket_Priority && <span>Ticket Priority *</span>}{!rowData.Ticket_Priority && <span className={classes.formErrorColor}>Ticket Priority *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Ticket_Priority}\r\n                onChange={(event)=>setFieldValue('Ticket_Priority',event.target.value)}\r\n                label=\"Ticket Category\"\r\n                required\r\n              >\r\n              <MenuItem value=\"\">\r\n                  <em>Ticket Priority</em>\r\n                </MenuItem>\r\n                {\r\n                  Object.values(dropListValues).map((c) =>{\r\n                    if(c.Object_Name === 'Ticket_Priority')\r\n                    return <MenuItem value={c.Object_Key}>{c.Object_Value}</MenuItem>\r\n                  })\r\n                }\r\n              </Select>\r\n              {!rowData.Ticket_Priority && <FormHelperText className={classes.formErrorColor}>Please select ticket priority.</FormHelperText>}\r\n            </FormControl>\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={!rowData.IncidentShortSummary}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"IncidentShortSummary\"\r\n                label=\"Incident Short Summary\"\r\n                name=\"IncidentShortSummary\"\r\n                autoComplete=\"IncidentShortSummary\"\r\n                value={rowData.IncidentShortSummary}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('IncidentShortSummary',event.target.value)}\r\n                helperText={!rowData.IncidentShortSummary &&  \"Please enter incident short summary.\"}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={!rowData.IncidentDetail}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"IncidentDetail\"\r\n                label=\"Incident Detail\"\r\n                name=\"IncidentDetail\"\r\n                autoComplete=\"IncidentDetail\"\r\n                value={rowData.IncidentDetail}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('IncidentDetail',event.target.value)}\r\n                helperText={!rowData.IncidentDetail &&  \"Please enter incident details.\"}\r\n          />\r\n             </Grid>\r\n\r\n             <Grid item xs={12}>\r\n             <MuiExpansionPanel square expanded={expanded === 'panel1'}>\r\n                  <MuiExpansionPanelDetails>\r\n                     <AnalysisHistory data={analysisHistory} onChange={data => {\r\n                       setAnalysisHistoryData(data)\r\n                     }} />\r\n                  </MuiExpansionPanelDetails>\r\n              </MuiExpansionPanel>\r\n             </Grid>\r\n\r\n\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                error={(rowData.Ticket_State === \"Assigned to L1\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Cancelled\" && !rowData.ResolutionNotes) || (rowData.Ticket_State === \"Closed\" && !rowData.ResolutionNotes)}\r\n                margin=\"normal\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"ResolutionNotes\"\r\n                label=\"Resolution Notes\"\r\n                name=\"ResolutionNotes\"\r\n                autoComplete=\"ResolutionNotes\"\r\n                value={rowData.ResolutionNotes}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('ResolutionNotes',event.target.value)}\r\n                helperText={!rowData.ResolutionNotes &&  \"Please enter resolution notes.\"}\r\n          />\r\n             </Grid>\r\n            \r\n             <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Bug_ID\"\r\n                label=\"Bug ID\"\r\n                name=\"Bug_ID\"\r\n                autoComplete=\"Bug_ID\"\r\n                value={rowData.Bug_ID}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Bug_ID',event.target.value)}\r\n            />\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Ms_TicketNumber\"\r\n                label=\"Vendor Ticket Number\"\r\n                name=\"Ms_TicketNumber\"\r\n                autoComplete=\"Ms_TicketNumber\"\r\n                value={rowData.Ms_TicketNumber}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Ms_TicketNumber',event.target.value)}\r\n           />\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n             <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"Customer_Name\"\r\n                label=\"Customer Name\"\r\n                name=\"Customer_Name\"\r\n                autoComplete=\"Customer_Name\"\r\n                value={rowData.Customer_Name}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Customer_Name',event.target.value)}\r\n          />\r\n            </Grid>\r\n\r\n             <Grid item xs={3}>\r\n             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDateTimePicker\r\n                      error={!rowData.StartDateandTime}\r\n                      //variant=\"inline\"\r\n                      ampm={false}\r\n                      label=\"Ticket EndDate & Time\"\r\n                      value={rowData.Ticket_EndDateTime}\r\n                      onChange={handleTicketEndDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                        readOnly:true\r\n                      }}\r\n                      helperText={!rowData.StartDateandTime &&  \"Please enter valid end date & time.\"}\r\n                    />\r\n                  </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n              <TextField\r\n                id=\"Ticket_Age\"\r\n                label=\"Ticket Age\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name=\"Ticket_Age\"\r\n                value={rowData.Ticket_Age}\r\n                className={classes.timetextField}\r\n                onChange={(event)=>setFieldValue('Ticket_Age',event.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                  fontSize:15,\r\n                  paddingTop:20,\r\n                  readOnly:true,\r\n                }}\r\n              />\r\n              </Grid>\r\n             \r\n\r\n            </Grid>\r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleEditClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={(event)=>handleFormSubmit(event,\"Edit\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* edit dialog content -->end here */}\r\n      {/* custom alert dialog content -->start here */}\r\n        <Dialog\r\n        open={alerteditopen}\r\n        onClose={handleAlertEditClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'sm'}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {\"Success\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertEditClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Selected Ticket Updated Successfully ! \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAlertEditClose} color=\"primary\" autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* date range dialog content -->start here */}\r\n      <form noValidate>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'sm'} \r\n        onClose={HandleDateExportmasterClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={daterangeopen}\r\n        >\r\n        <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Date Range Export \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleDateExportmasterClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent style={{padding:'0px 20px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n          <Grid container spacing={2}>\r\n             <Grid item xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDateTimePicker\r\n                      //error={!rowData.Ticket_Date}\r\n                      ampm = {false}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"From Date\"\r\n                      value={selectedFromDate}\r\n                      onChange={handleFromDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Ticket_Date &&  \"Please enter valid start date.\"}\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>   \r\n             </Grid>\r\n             <Grid item xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDateTimePicker\r\n                      //error={!rowData.Ticket_Date}\r\n                      ampm = {false}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"To Date\"\r\n                      value={selectedToDate}\r\n                      onChange={handleToDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd HH:mm:ss\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Ticket_Date &&  \"Please enter valid start date.\"}\r\n\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>   \r\n             </Grid>\r\n           </Grid>\r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleDateExportmasterClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={handleFormExportSubmit} variant=\"contained\" color=\"primary\">\r\n              Export\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </form>\r\n      {/* date range  dialog content -->end here */}\r\n\r\n      </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n  ","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  chart1: {\r\n    contrastText: white,\r\n    dark: colors.cyan[900],\r\n    main: colors.cyan[600],\r\n    light: colors.cyan[400]\r\n  },\r\n  chart2: {\r\n    contrastText: white,\r\n    dark: colors.teal[900],\r\n    main: colors.teal[600],\r\n    light: colors.teal[400]\r\n  },\r\n  chart3: {\r\n    contrastText: white,\r\n    dark: colors.deepOrange[900],\r\n    main: colors.deepOrange[600],\r\n    light: colors.deepOrange[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles,useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport palette from '../theme/palette';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 300,\r\n    position: 'relative'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 3\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default function ByShiftReport(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\n  for(var i=0;i<props.data.length;i++){\r\n    dataArray.push(props.data[i].AMERICAS);\r\n    dataArray.push(props.data[i].APAC);\r\n    dataArray.push(props.data[i].EMEIA);\r\n  }\r\n\r\n  const bardata = {\r\n    labels: ['AMERICAS', 'APAC', 'EMEIA'],\r\n    datasets: [\r\n      {\r\n        label: 'Ticket Shift',\r\n        backgroundColor: palette.secondary.main,\r\n        data: dataArray\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    legend: { display: true },\r\n    cornerRadius: 30,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 50,\r\n          maxBarThickness: 38,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'AMERICAS',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'APAC',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'EMEIA',\r\n      value: dataArray[2],\r\n      icon: \"\",\r\n      color: palette.primary.main,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n         action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"By Shift\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={bardata}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport palette from '../theme/palette';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 3\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  }\r\n\r\n}));\r\n\r\nexport default function ByStatusReport(props)\r\n{\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\nfor(var i=0;i<props.data.length;i++){\r\n  dataArray.push(props.data[i].L1Count);\r\n  dataArray.push(props.data[i].L2Count);\r\n  dataArray.push(props.data[i].OpenCount);\r\n  dataArray.push(props.data[i].ClosedCount);\r\n  dataArray.push(props.data[i].OnHoldCount);\r\n  dataArray.push(props.data[i].VendorCount);\r\n  dataArray.push(props.data[i].CSOCount);\r\n  dataArray.push(props.data[i].AwitingCount);\r\n  dataArray.push(props.data[i].CancelledCount);\r\n}\r\n\r\n  const staticdata = {\r\n    datasets: [\r\n      {\r\n        data: dataArray,\r\n        backgroundColor: [\r\n          palette.primary.main,\r\n          palette.secondary.main,\r\n          palette.success.main,\r\n          palette.error.main,\r\n          palette.warning.main,\r\n          palette.chart1.main,\r\n          palette.chart2.main,\r\n          palette.chart3.main,\r\n          palette.text.link\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: palette.white,\r\n        hoverBorderColor: palette.white\r\n      }\r\n    ],\r\n\r\n    labels: ['Assigned to L1','Assigned to L2','Open','Closed','On Hold','Vendor','Assigned to CSO','Awiting','Cancelled']\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: true\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 60,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'L1',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'L2',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.secondary.main\r\n    },\r\n    {\r\n      title: 'Open',\r\n      value: dataArray[2],\r\n      icon: \"\",\r\n      color: palette.success.main,\r\n    },\r\n    {\r\n      title: 'Closed',\r\n      value: dataArray[3],\r\n      icon: \"\",\r\n      color: palette.error.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'On Hold',\r\n      value: dataArray[4],\r\n      icon: \"\",\r\n      color: palette.chart1.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'Vendor',\r\n      value: dataArray[5],\r\n      icon: \"\",\r\n      color: palette.warning.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'CSO',\r\n      value: dataArray[6],\r\n      icon: \"\",\r\n      color: palette.chart2.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'Awiting',\r\n      value: dataArray[7],\r\n      icon: \"\",\r\n      color: palette.chart3.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'Cancelled',\r\n      value: dataArray[8],\r\n      icon: \"\",\r\n      color: palette.text.main\r\n    }\r\n\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"By Status\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={staticdata}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { makeStyles,useTheme } from '@material-ui/styles';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport palette from '../theme/palette';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 400,\r\n    position: 'relative'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 3\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default function ByCategoryMixReport(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\n  for(var i=0;i<props.data.length;i++){\r\n    dataArray.push(props.data[i].bulkupd);\r\n    dataArray.push(props.data[i].compenrol);\r\n    dataArray.push(props.data[i].userenrol);\r\n    dataArray.push(props.data[i].domainenrol);\r\n    dataArray.push(props.data[i].approvision);\r\n    dataArray.push(props.data[i].deluser);\r\n    dataArray.push(props.data[i].cpsync);\r\n    dataArray.push(props.data[i].compissue);\r\n    dataArray.push(props.data[i].optin);\r\n    dataArray.push(props.data[i].mftotp);\r\n    dataArray.push(props.data[i].datacoll);\r\n    dataArray.push(props.data[i].inviteredem);\r\n    dataArray.push(props.data[i].tenantrest);\r\n    dataArray.push(props.data[i].emailupn);\r\n    dataArray.push(props.data[i].natcloud);\r\n    dataArray.push(props.data[i].userdel);\r\n    dataArray.push(props.data[i].domainchk);\r\n    dataArray.push(props.data[i].azure);\r\n    dataArray.push(props.data[i].alertsite);\r\n    dataArray.push(props.data[i].bigeye);\r\n    dataArray.push(props.data[i].hpbpm);\r\n  }\r\n\r\n  const mixdata = {\r\n    labels: ['Bulk Upload','Company Enrolment','User Enrolment','Domain Enrolment','Application Provisioning','Delete User','CP Sync','Compatibility Issue','Opt In','MFA/OTP','Data Collection','Invite Redemption','Tenant Restriction','Email and UPN different','National Cloud','User Deletion','Domain Checks','Azure','Alertsite','BigEye','HP BPM'],\r\n    datasets: [\r\n      {\r\n        data: dataArray,\r\n        backgroundColor: [\r\n          palette.primary.main,\r\n          palette.secondary.main,\r\n          palette.success.main,\r\n          palette.info.main,\r\n          palette.warning.main,\r\n          palette.error.main,\r\n          palette.chart1.main,\r\n          palette.chart2.main,\r\n          palette.chart3.main,\r\n          palette.info.dark,\r\n          palette.warning.dark,\r\n          palette.error.dark,\r\n          palette.primary.dark,\r\n          palette.secondary.dark,\r\n          palette.success.dark,\r\n          palette.chart1.light,\r\n          palette.chart2.light,\r\n          palette.chart3.light,\r\n          palette.primary.light,\r\n          palette.secondary.light,\r\n          palette.success.light,\r\n        ],\r\n        borderWidth: 3,\r\n        borderColor: palette.white,\r\n        hoverBorderColor: palette.white\r\n      }\r\n    ]\r\n    \r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'BulkUpload',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'CompEnrol',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.secondary.main\r\n    },\r\n    {\r\n      title: 'UserEnrol',\r\n      value: dataArray[2],\r\n      icon: \"\",\r\n      color: palette.success.main,\r\n    },\r\n    {\r\n      title: 'DomEnrol',\r\n      value: dataArray[3],\r\n      icon: \"\",\r\n      color: palette.error.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'Appprov',\r\n      value: dataArray[4],\r\n      icon: \"\",\r\n      color: palette.chart1.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'DelUser',\r\n      value: dataArray[5],\r\n      icon: \"\",\r\n      color: palette.warning.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'CPSync',\r\n      value: dataArray[6],\r\n      icon: \"\",\r\n      color: palette.chart2.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'CompIsue',\r\n      value: dataArray[7],\r\n      icon: \"\",\r\n      color: palette.chart3.main\r\n    }\r\n    ,\r\n    {\r\n      title: 'OptIn',\r\n      value: dataArray[8],\r\n      icon: \"\",\r\n      color: palette.info.dark\r\n    },\r\n    {\r\n      title: 'MFA/OTP',\r\n      value: dataArray[9],\r\n      icon: \"\",\r\n      color: palette.warning.dark\r\n    }\r\n    ,\r\n    {\r\n      title: 'Data Coll',\r\n      value: dataArray[10],\r\n      icon: \"\",\r\n      color: palette.error.dark\r\n     },\r\n    {\r\n      title: 'EmailUPN',\r\n      value: dataArray[11],\r\n      icon: \"\",\r\n      color: palette.primary.dark\r\n    }\r\n    ,\r\n    {\r\n      title: 'NatClod',\r\n      value: dataArray[12],\r\n      icon: \"\",\r\n      color: palette.secondary.dark\r\n    }\r\n    ,\r\n    {\r\n      title: 'Domchk',\r\n      value: dataArray[13],\r\n      icon: \"\",\r\n      color: palette.success.dark\r\n    }\r\n    ,\r\n    {\r\n      title: 'Azure',\r\n      value: dataArray[14],\r\n      icon: \"\",\r\n      color: palette.chart1.light\r\n    }\r\n    ,\r\n    {\r\n      title: 'Alrtsite',\r\n      value: dataArray[15],\r\n      icon: \"\",\r\n      color: palette.chart2.light\r\n    }\r\n    ,\r\n    {\r\n      title: 'BigEye',\r\n      value: dataArray[16],\r\n      icon: \"\",\r\n      color: palette.chart3.light\r\n    }\r\n    ,\r\n    {\r\n      title: 'HPBPM',\r\n      value: dataArray[17],\r\n      icon: \"\",\r\n      color: palette.primary.light\r\n    }\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n         action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"By Category\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Pie\r\n            data={mixdata}\r\n            //options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport palette from '../theme/palette';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '390px'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 8\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  }\r\n\r\n}));\r\n\r\nexport default function ByTypeReport(props)\r\n{\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\n  for(var i=0;i<props.data.length;i++){\r\n    dataArray.push(props.data[i].TYPECASE);\r\n    dataArray.push(props.data[i].TYPEINCIDENT);\r\n  }\r\n\r\n\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    legend: { display: true },\r\n    cornerRadius: 20,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 50,\r\n          maxBarThickness: 46,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n\r\n  const piedata = {\r\n    datasets: [\r\n      {\r\n        label: 'Ticket Type',\r\n        data: dataArray,\r\n        backgroundColor: [\r\n          palette.secondary.main,\r\n          palette.success.main\r\n        ],\r\n        borderWidth: 3,\r\n        borderColor: palette.white,\r\n        hoverBorderColor: palette.white\r\n      }\r\n    ],\r\n\r\n    labels: ['CASE','INCIDENT']\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'CASE',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'INCIDENT',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.success.main,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader \r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"By Ticket Type\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={piedata}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles,useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport palette from '../theme/palette';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 300,\r\n    position: 'relative'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 3\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default function ByTicketAgeReport(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  var splitdataArray;\r\n  var splitArrayvalues;\r\n  var lessthan_5 = 0;\r\n  var lessthan_10 = 0;\r\n  var lessthan_15 = 0;\r\n  var lessthan_20 = 0;\r\n  var lessthan_24 = 0;\r\n  var morethan_24 = 0;\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\n  for(var i=0;i<props.data.length;i++){\r\n    splitdataArray = props.data[i].Ticket_Age+'';\r\n    splitArrayvalues = splitdataArray.split(\":\");\r\n      const elementhour = splitArrayvalues[1];\r\n      if(elementhour < 5){\r\n        lessthan_5 = lessthan_5 + 1;\r\n      }\r\n      else if(elementhour < 10){\r\n        lessthan_10 = lessthan_10 + 1;\r\n      }\r\n      else if(elementhour < 15){\r\n        lessthan_15 = lessthan_15 + 1;\r\n      }\r\n      else if(elementhour < 20){\r\n        lessthan_20 = lessthan_20 + 1;\r\n      }\r\n      else if(elementhour < 24){\r\n        lessthan_24 =lessthan_24 + 1;\r\n      }\r\n      else{\r\n        morethan_24 = morethan_24 + 1;\r\n      }\r\n  }\r\n  dataArray.push(lessthan_5);\r\n  dataArray.push(lessthan_10);\r\n  dataArray.push(lessthan_15);\r\n  dataArray.push(lessthan_20);\r\n  dataArray.push(lessthan_24);\r\n  dataArray.push(morethan_24);\r\n  console.log(dataArray);\r\n\r\n  const bardata = {\r\n    labels: ['Age less than 5 hrs', 'Age less than 10 hrs', 'Age less than 15 hrs', 'Age less than 20 hrs', 'Age less than 24 hrs', 'Age more than 24 hrs'],\r\n    datasets: [\r\n      {\r\n        label: 'Ticket Age',\r\n        backgroundColor: palette.secondary.main,\r\n        data: dataArray\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    legend: { display: true },\r\n    cornerRadius: 30,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 50,\r\n          maxBarThickness: 38,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Age less than 5 hrs',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'Age less than 10 hrs',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.primary.main\r\n    },\r\n    {\r\n      title: 'Age less than 15 hrs',\r\n      value: dataArray[2],\r\n      icon: \"\",\r\n      color: palette.primary.main,\r\n    },\r\n    {\r\n      title: 'Age less than 20 hrs',\r\n      value: dataArray[3],\r\n      icon: \"\",\r\n      color: palette.primary.main,\r\n    },\r\n    {\r\n      title: 'Age less than 24 hrs',\r\n      value: dataArray[4],\r\n      icon: \"\",\r\n      color: palette.primary.main,\r\n    },\r\n    {\r\n      title: 'Age more than 24 hrs',\r\n      value: dataArray[5],\r\n      icon: \"\",\r\n      color: palette.primary.main,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n         action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"By Ticket Age\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={bardata}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles,useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport palette from '../theme/palette';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 300,\r\n    position: 'relative'\r\n  },\r\n  stats: {\r\n    marginTop: 8,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: 3\r\n  },\r\n  chartFont:{\r\n    fontSize:10,\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default function ByExecuteSummaryReport(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState(props.data);\r\n  var dataArray = [];\r\n  React.useEffect(() => {\r\n      console.log(JSON.stringify(props.data));\r\n  }, [props.data]);\r\n\r\n  for(var i=0;i<props.data.length;i++){\r\n    dataArray.push(props.data[i].TYPEINCIDENT);\r\n    dataArray.push(props.data[i].TYPECASE);\r\n    dataArray.push(0);\r\n  }\r\n\r\n  const bardata = {\r\n    labels: ['Incident’s', 'Service Request', 'Bug’s'],\r\n    datasets: [\r\n      {\r\n        label: 'Request Summary',\r\n        backgroundColor: palette.warning.main,\r\n        data: dataArray\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    legend: { display: true },\r\n    cornerRadius: 30,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 50,\r\n          maxBarThickness: 38,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Incident’s',\r\n      value: dataArray[0],\r\n      icon: \"\",\r\n      color: palette.warning.main\r\n    },\r\n    {\r\n      title: 'Service Request',\r\n      value: dataArray[1],\r\n      icon: \"\",\r\n      color: palette.warning.main\r\n    },\r\n    {\r\n      title: 'Bug’s',\r\n      value: dataArray[2],\r\n      icon: \"\",\r\n      color: palette.warning.main,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n         action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Request Summary\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={bardata}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography className={classes.chartFont}>{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n              >\r\n                {device.value}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport \r\n    { \r\n        makeStyles,\r\n        createMuiTheme,\r\n        MuiThemeProvider\r\n    } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport \r\n    {\r\n        LinearProgress,\r\n        Button\r\n    }\r\n from '@material-ui/core';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport * as moment from 'moment';\r\nimport { Grid } from '@material-ui/core';\r\nimport  ByShiftReport  from '../components/ByShiftReport'\r\nimport  ByStatusReport  from '../components/ByStatusReport'\r\nimport  ByCategoryMixReport  from '../components/ByCategoryMixReport'\r\nimport  ByTypeReport  from '../components/ByTypeReport'\r\nimport  ByTicketAgeReport  from '../components/ByTicketAgeReport'\r\nimport  ByExecuteSummaryReport from '../components/ByExecuteSummaryReport'\r\nimport { chart_status_url,chart_age_url } from \"../constant\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n    paddingLeft:'6%',\r\n  },\r\n  gridPaddingTop:{\r\n    paddingTop:25\r\n  }\r\n}));\r\n\r\nexport default function ChartsShowcase() {\r\n  const classes = useStyles();\r\n  const [isLoading,setIsLoading] = React.useState(false);\r\n  const [selectedFromDate, setSelectedFromDate] = React.useState(new Date('05-01-2020'));\r\n  const [selectedToDate, setSelectedToDate] = React.useState(new Date());\r\n  const [statusReportData,setStatusReportData] = React.useState([]);\r\n  const [ageReportData,setAgeReportData] = React.useState([]);\r\n  const handleFromDateChange = (date) => {\r\n    setSelectedFromDate(date);\r\n  };\r\n\r\n  const handleToDateChange = (date) => {\r\n    setSelectedToDate(date);\r\n  };\r\n\r\n const handleFilterSubmit = () =>{\r\n  fetchChartData();\r\n }\r\n\r\n const fetchChartData = () =>{\r\n    setIsLoading(true);\r\n    fetch(chart_status_url+moment(selectedFromDate,'DD-MM-YYYY').format('DD-MM-YYYY')+\",\"+moment(selectedToDate,'DD-MM-YYYY').format('DD-MM-YYYY'))\r\n    .then(res => res.json())\r\n    .then((result)=>{\r\n      console.log(JSON.stringify(result));\r\n      setStatusReportData(result);\r\n      fetch(chart_age_url+moment(selectedFromDate,'DD-MM-YYYY').format('DD-MM-YYYY')+\",\"+moment(selectedToDate,'DD-MM-YYYY').format('DD-MM-YYYY'))\r\n      .then(res => res.json())\r\n      .then((result)=>{\r\n        setAgeReportData(result);\r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      .finally(()=>{\r\n        setIsLoading(false);\r\n      })\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoading(false);\r\n    })\r\n  }\r\n  // Ajax Call Starts here\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(chart_status_url+moment(selectedFromDate,'DD-MM-YYYY').format('DD-MM-YYYY')+\",\"+moment(selectedToDate,'DD-MM-YYYY').format('DD-MM-YYYY'))\r\n    .then(res => res.json())\r\n    .then((result)=>{\r\n      setStatusReportData(result);\r\n      fetch(chart_age_url+moment(selectedFromDate,'DD-MM-YYYY').format('DD-MM-YYYY')+\",\"+moment(selectedToDate,'DD-MM-YYYY').format('DD-MM-YYYY'))\r\n      .then(res => res.json())\r\n      .then((result)=>{\r\n        setAgeReportData(result);\r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      .finally(()=>{\r\n        setIsLoading(false);\r\n      })\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n    .finally(()=>{\r\n      setIsLoading(false);\r\n    })\r\n  },[]\r\n  )\r\n\r\n  \r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    // Style sheet name ⚛️\r\n    MuiTypography: {\r\n      // Name of the rule\r\n      h5: {\r\n        // Some CSS\r\n        fontSize: 16,\r\n      },\r\n    },\r\n    MuiCardHeader:{\r\n      root:{\r\n        padding:9\r\n      }\r\n    },\r\n}\r\n});\r\n\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n      {\r\n        isLoading && \r\n        <LinearProgress color=\"secondary\"/>\r\n      }\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n      >\r\n            <Grid item xs={3}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd-MM-yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"From Date\"\r\n                    value={selectedFromDate}\r\n                    onChange={handleFromDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd-MM-yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"To Date\"\r\n                    value={selectedToDate}\r\n                    onChange={handleToDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                 </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid xs={1} className={classes.gridPaddingTop}>\r\n                <Button  onClick={handleFilterSubmit} variant=\"contained\" color=\"primary\">\r\n                  Go\r\n                </Button>\r\n                </Grid>\r\n                <Grid xs={3}>\r\n                </Grid>\r\n\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n         <ByStatusReport data={statusReportData} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n         \r\n         <ByShiftReport data={statusReportData}/>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n         <ByCategoryMixReport data={statusReportData}/>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n         <ByTypeReport data={statusReportData}/>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n        <ByTicketAgeReport data={ageReportData}/>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n         <ByExecuteSummaryReport data={statusReportData} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport \r\n    { \r\n        makeStyles,\r\n        createMuiTheme,\r\n        MuiThemeProvider\r\n    } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \r\n    { \r\n        LinearProgress,\r\n        IconButton,\r\n        Button,\r\n        Dialog,\r\n        TextField,\r\n        DialogTitle,\r\n        DialogContent,\r\n        DialogContentText,\r\n        DialogActions,\r\n        Typography,\r\n        Paper,\r\n        Grid,\r\n        InputLabel,\r\n        MenuItem,\r\n        FormControl,\r\n        Select,\r\n        FormHelperText,\r\n        Slide\r\n    } from '@material-ui/core';\r\nimport { maintenance_url } from \"../constant\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\n\r\n    //Alert transition left\r\n    const TransitionLeft = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"left\" ref={ref} {...props} />;\r\n    });\r\n\r\n    //Alert transition left\r\n    const TransitionUp = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n\r\n    const theme = createMuiTheme({\r\n      overrides: {\r\n        // Style sheet name ⚛️\r\n        MuiMenuItem: {\r\n          // Name of the rule\r\n          root: {\r\n            // Some CSS\r\n            fontSize: 15,\r\n          },\r\n        },\r\n        MuiSelect:{\r\n          root: {\r\n            // Some CSS\r\n            fontSize: 15,\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          root: {\r\n           padding:2,\r\n          }\r\n        },\r\n        MuiTableRow: {\r\n          root: {\r\n            \"&:hover\": {\r\n              backgroundColor: \"rgba(33, 150, 243, 0.5)\"\r\n            }\r\n          }\r\n        },\r\n        MuiExpansionPanel :{\r\n          root: {\r\n            fontSize: 11,\r\n            border: '1px solid rgba(0, 0, 0, .125)',\r\n            boxShadow: 'none',\r\n            '&:not(:last-child)': {\r\n              borderBottom: 0,\r\n            },\r\n            '&:before': {\r\n              display: 'none',\r\n            },\r\n            '&$expanded': {\r\n              margin: 'auto',\r\n            },\r\n          },\r\n        },\r\n        ExpansionPanelSummary :{\r\n          root: {\r\n            fontSize: 11,\r\n            backgroundColor: 'rgba(0, 0, 0, .03)',\r\n            borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n            marginBottom: -1,\r\n            minHeight: 56,\r\n            '&$expanded': {\r\n              minHeight: 44,\r\n            },\r\n          },\r\n          content: {\r\n            fontSize: 11,\r\n            margin:10,\r\n            '&$expanded': {\r\n              margin: 10,\r\n            },\r\n          },\r\n        },\r\n        MuiExpansionPanelDetails:{\r\n          root: {\r\n            padding:'2px',\r\n            fontSize: 11\r\n          }\r\n        },\r\n        MuiTypography:{\r\n          body1:{\r\n            fontSize: 15,\r\n          }\r\n        },\r\n        MuiExpansionPanelSummary:{\r\n          root:{\r\n            padding:2\r\n          },\r\n          content: {\r\n            fontSize: 11,\r\n            margin:10,\r\n            '&$expanded': {\r\n              margin: 5,\r\n            },\r\n          },\r\n        },\r\n        MuiDialogTitle:{\r\n          root:{\r\n            padding: '10px 10px',\r\n            color:'#ffffff'\r\n  \r\n          }\r\n        },\r\n        MuiDialog:{\r\n          paperWidthSm:{\r\n            maxWidth:600\r\n          }\r\n        },\r\n        MuiDialogContent:{\r\n          root:{\r\n            padding:'0px'\r\n          }\r\n        }\r\n      },\r\n    });\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        width: '100%',\r\n        paddingLeft:'5%',\r\n      },\r\n      div_root:{\r\n        width: '100%',\r\n        size:'sm',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n      TableCell_custom:{\r\n        padding:5,\r\n        fontSize:12\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n      closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: 4,\r\n        color: theme.palette.grey[500],\r\n      },\r\n      checkButton: {\r\n        marginTop:36,\r\n        padding:0\r\n      },\r\n      viewDioTitle:{\r\n        backgroundColor:'#3f51b5',\r\n        color:'#fffff !important',\r\n      },\r\n      viewFormaValidationDioTitle:{\r\n        backgroundColor:'#e53935',\r\n        color:'#fffff !important',\r\n      },\r\n      TableRowBackgroundColor:{\r\n        '&:hover': {\r\n          backgroundColor: '#fab700',\r\n        },\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '100%',\r\n        fontSize:15\r\n      },\r\n      formErrorColor: {\r\n       color:\"red\"\r\n      },\r\n      formPaddingTop:{\r\n        paddingTop:11\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      datetextField: {\r\n        paddingTop:'10px',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 271,\r\n      },\r\n      timetextField: {\r\n        paddingTop:'10px',\r\n      },\r\n      GridPaddingTop:{\r\n        paddingTop:'36px'\r\n      },\r\n      tableRow: {\r\n        hover: {\r\n           backgroundColor:'#eed35a',\r\n          }\r\n       },\r\n       custom_fontsize:{\r\n        fontSize:15\r\n       },\r\n       icon_color:{\r\n         color:\"#f50057\"\r\n       },\r\n       icon_add_color:{\r\n        color:\"#1976d2\"\r\n      }\r\n       \r\n    }));\r\n  \r\n\r\nconst emptyObj = {\r\n  ID :'',\r\n  Object_Name:'',\r\n  Object_Key:'',\r\n  Object_Value:'',\r\n  Object_User:'',\r\n  Object_Date:'',\r\n}\r\n\r\nconst assignEmptyValues = (rows)=> {\r\n  return rows.map(row => Object.assign({},emptyObj,row));\r\n}\r\n\r\n\r\n\r\nexport default function Maintenance() {\r\n    const classes = useStyles();\r\n    const [rows,setRows] = React.useState([]);\r\n    const [selectedRow, setSelectedRow] = React.useState(null);\r\n    const [rowData,setRowData] = React.useState({});\r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const [addopen, setAddOpen] = React.useState(false);\r\n    const [isLoading,setIsLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [alertdeleteopen,setAlertDeleteOpen] = React.useState(false);\r\n    const [formvalidationopen,setFormValidationOpen] = React.useState(false);\r\n    const [isDeleteLoading,setIsDeleteLoading] = React.useState(false);\r\n    const [isLoadingDialog,setIsLoadingDialog] = React.useState(false);\r\n    const [formvalidationerrors,setFormValidationErrors] = React.useState({});\r\n    const [tabvalue, setTabValue] = React.useState('1');\r\n    //set field values\r\n    const setFieldValue = (name,value) =>{\r\n      const updated = {\r\n        ...rowData,\r\n        [name] : value\r\n      }\r\n      setRowData(updated);\r\n    }\r\n    \r\n    // Ajax Call Starts here\r\n    React.useEffect(() => {\r\n      setIsLoading(true);\r\n      fetch(maintenance_url)\r\n      .then(res => res.json())\r\n      .then((result)=>{\r\n        setRows(assignEmptyValues(result));\r\n        \r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      .finally(()=>{\r\n        setIsLoading(false);\r\n      })\r\n    },[]\r\n    )\r\n\r\n    const handleEditClickOpen = (selectedRow,rowData) => {\r\n      setSelectedRow(selectedRow)\r\n      setRowData(rowData);\r\n      setEditOpen(true); \r\n    };\r\n\r\n    const handleAddClickOpen = () => {\r\n      setRowData(Object.assign({},emptyObj,{\r\n        \"Object_Name\":\"\",\r\n        \"Object_Key\":\"\",\r\n        \"Object_Value\":\"\",\r\n        \"Object_User\":\"System\",\r\n        \"Object_Date\":moment().format('YYYY-MM-DDTHH:mm:ss'),\r\n      }));\r\n      setAddOpen(true); \r\n    };\r\n    \r\n    //Delete Popup alert\r\n    const HandleDeleteMaintenanceOpen = (selectedRow) =>{\r\n      var temp = '';\r\n      for (var i = 0; i < selectedRow.length; i++) {\r\n        var object = selectedRow[i];\r\n        for (var property in object) {\r\n          if(property === 'ID'){\r\n            temp = temp += object[property]+',';\r\n          }\r\n        }\r\n      }\r\n      setSelected(temp.replace(/,\\s*$/, \"\"))\r\n      setAlertDeleteOpen(true);\r\n    }\r\n\r\n    const handleAlertDeleteClose = () =>{\r\n      setAlertDeleteOpen(false);\r\n    }\r\n    \r\n    const handleAlertDeleteCancelClose = () =>{\r\n      setAlertDeleteOpen(false);\r\n    }\r\n       \r\n    const handleAlertDeleteSuccessOpen = () =>{\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Validation success\",\"message\":\" Selected record deleted successfully\"})\r\n    }\r\n    const handleAlertFormValidationClose = () =>{\r\n      setFormValidationOpen(false);\r\n    }\r\n\r\n    const HandleAddMaintenanceClose = () =>{\r\n      setAddOpen(false);\r\n    }\r\n    const HandleEditMaintenanceClose = () =>{\r\n      setEditOpen(false);\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n      var Object_Name = rowData.Object_Name;\r\n      var Object_Key = rowData.Object_Key;\r\n      var Object_Value = rowData.Object_Value;\r\n      var Object_User = rowData.Object_User;\r\n      var Object_Date = rowData.Object_Date;\r\n        setRowData(Object.assign({},emptyObj,{\r\n          \"Object_Name\":Object_Name,\r\n          \"Object_Key\":Object_Key,\r\n          \"Object_Value\":Object_Value,\r\n          \"Object_User\":Object_User,\r\n          \"Object_Date\":Object_Date,\r\n        }));\r\n      \r\n      setTabValue(newValue);\r\n    };\r\n\r\n\r\nconst handleDeleteSubmitClose = (items) => {\r\n  //alert(\"selected check box items\"+items.selected);\r\n  setIsDeleteLoading(true);\r\n  fetch(maintenance_url+items.selected, { \r\n    method: \"DELETE\",\r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response => response.json()) \r\n  .then(result => {\r\n    if(result.success === 1){\r\n      MaintenanceLoadingAfterSuccess();\r\n      setAlertDeleteOpen(false);\r\n      handleAlertDeleteSuccessOpen();\r\n      setSelected([]);\r\n    }else{\r\n      alert(\"Technical error occurred. please contact admin team.\")\r\n    }\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsDeleteLoading(false);\r\n  });        \r\n}\r\n\r\nconst MaintenanceLoadingAfterSuccess = () =>{\r\n  setIsLoading(true);\r\n  fetch(maintenance_url)\r\n  .then(res => res.json())\r\n  .then((result)=>{\r\n    setRows(result);\r\n    \r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  })\r\n}\r\n\r\nconst handleAddSubmitClose = () => {\r\n  console.log(\"Add submit data\"+JSON.stringify(rowData));\r\n  setIsLoading(true);\r\n  fetch(maintenance_url, {\r\n    method: \"POST\", \r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response =>  response.json())\r\n  .then(result => {\r\n    console.log(\"Add maintenance success\",result.error);\r\n    if(result.error === 409){\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Add Failed\",\"message\":\" Drop list value already exists\"})\r\n    }else{\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"title\":\"Add success\",\"message\":\" New drop list successfully\"});\r\n      MaintenanceLoadingAfterSuccess();\r\n    }\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  }); \r\n  setAddOpen(false);\r\n}\r\n\r\nconst handleEditSubmitClose = () => {\r\n  console.log(\"Edit submit data ->\"+JSON.stringify(rowData));\r\n  setIsLoading(true);\r\n  fetch(maintenance_url+rowData.ID, { \r\n    method: \"PATCH\", \r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response => response.json()) \r\n  .then(result => {\r\n    setFormValidationOpen(true);\r\n    setFormValidationErrors({\"title\":\"Edit success\",\"message\":\" Record updated successfully\"});\r\n    MaintenanceLoadingAfterSuccess();\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  }); \r\nsetEditOpen(false);\r\n\r\n}\r\n\r\n\r\nconst handleFormSubmit = (event,title) =>{\r\n  if(rowData.Object_Name === \"\"){\r\n    setFormValidationOpen(true);\r\n    setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\" Please enter List Name\"})\r\n    event.preventDefault();\r\n  }\r\n  // else if(rowData.Object_Key === \"\"){\r\n  //   setFormValidationOpen(true);\r\n  //   setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\"Please enter Object Key\"})\r\n  //   event.preventDefault();\r\n  // }\r\n\r\n  else if(rowData.Object_Value === \"\"){\r\n    setFormValidationOpen(true);\r\n    setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\" Please enter List Value\"})\r\n    event.preventDefault();\r\n  }\r\n  else if(rowData.Object_User === \"\"){\r\n    setFormValidationOpen(true);\r\n    setFormValidationErrors({\"title\":\"Validation falied\",\"message\":\" Please enter created by\"})\r\n    event.preventDefault();\r\n  }\r\n  else{\r\n    if(title === \"Add\"){\r\n      handleAddSubmitClose();\r\n    }\r\n    else{\r\n      handleEditSubmitClose();\r\n    }\r\n   \r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n    {\r\n        isLoading && \r\n        <LinearProgress color=\"secondary\"/>\r\n    }\r\n    <MaterialTable\r\n      title=\"Maintenance\"\r\n      columns={[\r\n        { title: 'ID', field: 'ID',width: '5%', filtering: false,defaultSort:'asc' },\r\n        { title: 'Droplist Name', field: 'Object_Name',width: '25%' },\r\n        // { title: 'Droplist Key', field: 'Object_Key',width: '20%'  },\r\n        { title: 'Droplist Value', field: 'Object_Value',width: '25%' },\r\n        { title: 'Created By', field: 'Object_User',width: '22%' },\r\n        { title: 'Creation Date', field: 'Object_Date',width: '23%' },\r\n        // { title: 'Edit',field: 'edit',render: tablerowData => <img alt=\"\" src={process.env.PUBLIC_URL+\"/edit_icon.png\"} onClick={(event) => { handleEditClickOpen(tablerowData)}} style={{width: 30, height:25}}/> , filtering: false ,width: '2%', sorting: false,export:false  },\r\n        // { title: 'Add',field: 'add',render: tablerowData => <img alt=\"\" src={process.env.PUBLIC_URL+\"/add_icon.png\"} onClick={(event) => { handleAddClickOpen(tablerowData) }} style={{width: 30, height:25}}/>, filtering: false,width: '2%', sorting: false,export:false   },\r\n      ]}\r\n      data={rows}\r\n      //onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n      onRowClick={((evt, selectedRow) => handleEditClickOpen(selectedRow.tableData.id,selectedRow))}\r\n      options={{\r\n        selection: true,\r\n          filtering: true,\r\n          headerStyle: {\r\n            backgroundColor: '#5c6fd6',\r\n            color: '#FFF'\r\n          },\r\n          rowStyle: rowData => ({\r\n            backgroundColor: (selectedRow === rowData.tableData.id) ? '#ddcd74' : '#ffffff'\r\n          }),\r\n          pageSize:10,\r\n          pageSizeOptions:[10,20,30,40,50]  \r\n      }}\r\n      localization={{\r\n        pagination: {\r\n            labelDisplayedRows: '{from}-{to} of {count}'\r\n        },\r\n        toolbar: {\r\n            nRowsSelected: '{0} row(s) selected'\r\n        },\r\n        header: {\r\n            actions: 'Actions'\r\n        },\r\n        body: {\r\n            emptyDataSourceMessage: 'No records to display',\r\n            filterRow: {\r\n                filterTooltip: 'Filter'\r\n            }\r\n        }\r\n    }}\r\n    actions={[\r\n      {\r\n        tooltip: 'Remove All Selected Users',\r\n        icon: 'delete',\r\n        onClick: (evt, data) => { HandleDeleteMaintenanceOpen(data) }\r\n       },\r\n      {\r\n        icon: () => { return <AddCircleIcon className={classes.icon_add_color}/> },\r\n        tooltip: 'Add New Ticket',\r\n        isFreeAction: true,\r\n        onClick: (event) => { handleAddClickOpen() }\r\n      }\r\n    ]}\r\n      //onSelectionChange={(rows) => alert('You selected ' + rows.length + ' rows')}\r\n    />\r\n    {/* custom alert dialog content -->start here */}\r\n    <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={alertdeleteopen}\r\n        onClose={handleAlertDeleteClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'xs'}\r\n        fullWidth={true}\r\n        position = \"top\"\r\n        TransitionComponent={TransitionLeft}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle} >\r\n        {\"Delete\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertDeleteClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        {\r\n            isDeleteLoading && \r\n            <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure want to delete selected ticket(s) ? \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertDeleteCancelClose} variant=\"contained\" color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button variant=\"contained\" value={selected} onClick={()=>handleDeleteSubmitClose({selected})} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={formvalidationopen}\r\n        onClose={handleAlertFormValidationClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={true}\r\n        maxWidth = {'xs'}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {formvalidationerrors.title}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertFormValidationClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {formvalidationerrors.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertFormValidationClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n{/* add dialog content -->start here */}\r\n<form noValidate>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'sm'} \r\n        onClose={HandleEditMaintenanceClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={editopen}\r\n        >\r\n        {/* <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Add \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddMaintenanceClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle> */}\r\n        <DialogContent style={{padding:'0px 0px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n        <TabContext value={tabvalue}>\r\n        <AppBar position=\"static\">\r\n          <TabList onChange={handleTabChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"Edit\" value=\"1\" />\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleEditMaintenanceClose}>\r\n            <CloseIcon />\r\n            </IconButton>\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\">\r\n        <Grid container spacing={2}>\r\n             <Grid item xs={6}>\r\n                <TextField\r\n                error={!rowData.Object_Name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Name\"\r\n                label=\"List Name\"\r\n                name=\"Object_Name\"\r\n                autoComplete=\"Object_Name\"\r\n                value={rowData.Object_Name}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Name',event.target.value)}\r\n                helperText={!rowData.Object_Name &&  \"Please enter List Name.\"}\r\n            />\r\n                \r\n             </Grid>\r\n             {/* <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Key\"\r\n                label=\"Object Key\"\r\n                name=\"Object_Key\"\r\n                autoComplete=\"Object_Key\"\r\n                value={rowData.Object_Key}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Key',event.target.value)}\r\n                helperText={!rowData.Object_Name &&  \"Please enter Object Key.\"}\r\n            />\r\n             </Grid> */}\r\n\r\n             <Grid item xs={6}>\r\n             <TextField\r\n                error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Value\"\r\n                label=\"List Value\"\r\n                name=\"Object_Value\"\r\n                autoComplete=\"Object_Value\"\r\n                value={rowData.Object_Value}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Value',event.target.value)}\r\n                helperText={!rowData.Object_Value &&  \"Please enter list value.\"}\r\n            />\r\n           \r\n             </Grid>\r\n\t\t\t <Grid item xs={6}>\r\n       <TextField\r\n                error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_User\"\r\n                label=\"Created By\"\r\n                name=\"Object_User\"\r\n                autoComplete=\"Object_User\"\r\n                value={rowData.Object_User}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                  readOnly:true,\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_User',event.target.value)}\r\n                helperText={!rowData.Object_User &&  \"Please enter created by.\"}\r\n            />\r\n           \r\n             </Grid>\r\n\t\t\t <Grid item xs={6}>\r\n       <TextField\r\n                error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Date\"\r\n                label=\"Creation Date\"\r\n                name=\"Object_Date\"\r\n                autoComplete=\"Object_Date\"\r\n                value={rowData.Object_Date}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                  readOnly: true,\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Date',event.target.value)}\r\n                helperText={!rowData.Object_Date &&  \"Please enter Creation Date.\"}\r\n            />\r\n             </Grid>\r\n            </Grid>\r\n        </TabPanel>\r\n      </TabContext> \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleEditMaintenanceClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={(event)=>handleFormSubmit(event,\"Edit\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </form>\r\n      {/* add dialog content -->end here */}\r\n\r\n      {/* add dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'sm'} \r\n        onClose={HandleAddMaintenanceClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={addopen}\r\n        >\r\n        {/* <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Add \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddMaintenanceClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle> */}\r\n        <DialogContent style={{padding:'0px 0px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n        <TabContext value={tabvalue}>\r\n        <AppBar position=\"static\">\r\n          <TabList onChange={handleTabChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"Add\" value=\"1\" />\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddMaintenanceClose}>\r\n            <CloseIcon />\r\n            </IconButton>\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\">\r\n        <Grid container spacing={2}>\r\n             <Grid item xs={6}>\r\n             <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Object_Name && <span>List Name *</span>}{!rowData.Object_Name && <span className={classes.formErrorColor}>List Name *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Object_Name}\r\n                onChange={(event)=>setFieldValue('Object_Name',event.target.value)}\r\n                label=\"Ticket Shift *\"\r\n                required\r\n                error={!rowData.Object_Name}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>List Name  *</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Ticket_Shift\">Ticket_Shift</MenuItem>\r\n                <MenuItem value=\"Ticket_Type\">Ticket_Type</MenuItem>\r\n                <MenuItem value=\"Ticket_Priority\">Ticket_Priority</MenuItem>\r\n                <MenuItem value=\"Ticket_Category_Enrolment\">Ticket_Category_Enrolment</MenuItem>\r\n                <MenuItem value=\"Ticket_Category_Technical\">Ticket_Category_Technical</MenuItem>\r\n                <MenuItem value=\"Ticket_Category_Process\">Ticket_Category_Process</MenuItem>\r\n                <MenuItem value=\"Ticket_Category_Azure\">Ticket_Category_Azure</MenuItem>\r\n                <MenuItem value=\"Ticket_Category_Monitoring\">Ticket_Category_Monitoring</MenuItem>\r\n                <MenuItem value=\"Ticket_Category\">Ticket_Category</MenuItem>\r\n                <MenuItem value=\"Ticket_Owner\">Ticket_Owner</MenuItem>\r\n                <MenuItem value=\"Ticket_State\">Ticket_State</MenuItem>\r\n                <MenuItem value=\"Ticket_Team_Type\">Ticket_Team_Type</MenuItem>\r\n              </Select>\r\n              {!rowData.Object_Name  && <FormHelperText className={classes.formErrorColor}>Please select list name.</FormHelperText>}\r\n            </FormControl>\r\n                \r\n             </Grid>\r\n             {/* <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Key\"\r\n                label=\"Object Key\"\r\n                name=\"Object_Key\"\r\n                autoComplete=\"Object_Key\"\r\n                value={rowData.Object_Key}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Key',event.target.value)}\r\n                helperText={!rowData.Object_Name &&  \"Please enter Object Key.\"}\r\n            />\r\n             </Grid> */}\r\n\r\n             <Grid item xs={6}>\r\n             <TextField\r\n                error={!rowData.Object_Value}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Value\"\r\n                label=\"List Value\"\r\n                name=\"Object_Value\"\r\n                autoComplete=\"Object_Value\"\r\n                value={rowData.Object_Value}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Value',event.target.value)}\r\n                helperText={!rowData.Object_Value &&  \"Please enter list value.\"}\r\n            />\r\n           \r\n             </Grid>\r\n\t\t\t <Grid item xs={6}>\r\n       <TextField\r\n               // error={!rowData.Object_Key}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_User\"\r\n                label=\"Created by\"\r\n                name=\"Object_User\"\r\n                autoComplete=\"Object_User\"\r\n                value={rowData.Object_User}\r\n                //value=\"System\"\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                  readOnly: true,\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_User',event.target.value)}\r\n               // helperText={!rowData.Object_User &&  \"Please enter created  by.\"}\r\n            />\r\n           \r\n             </Grid>\r\n\t\t\t <Grid item xs={6}>\r\n       <TextField\r\n                error={!rowData.Object_Date}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Object_Date\"\r\n                label=\"Creation Date\"\r\n                name=\"Object_Date\"\r\n                autoComplete=\"Object_Date\"\r\n                value={rowData.Object_Date}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                  readOnly: true,\r\n                }}\r\n                onChange={(event)=>setFieldValue('Object_Date',event.target.value)}\r\n                helperText={!rowData.Object_Date &&  \"Please enter Object Date.\"}\r\n            />\r\n             </Grid>\r\n            </Grid>\r\n        </TabPanel>\r\n      </TabContext> \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleAddMaintenanceClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={(event)=>handleFormSubmit(event,\"Add\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* add dialog content -->end here */}\r\n\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport \r\n    { \r\n        makeStyles,\r\n        createMuiTheme,\r\n        MuiThemeProvider\r\n    } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \r\n    { \r\n        LinearProgress,\r\n        IconButton,\r\n        Button,\r\n        Dialog,\r\n        TextField,\r\n        DialogTitle,\r\n        DialogContent,\r\n        DialogContentText,\r\n        DialogActions,\r\n        Typography,\r\n        Paper,\r\n        Grid,\r\n        InputLabel,\r\n        MenuItem,\r\n        FormControl,\r\n        Select,\r\n        FormHelperText,\r\n        Slide\r\n    } from '@material-ui/core';\r\nimport { KeyboardDateTimePicker,KeyboardDatePicker,MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { bugreport_url } from \"../constant\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\n\r\n    //Alert transition left\r\n    const TransitionLeft = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"left\" ref={ref} {...props} />;\r\n    });\r\n\r\n    //Alert transition left\r\n    const TransitionUp = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    function fromDBDate(datestring) {\r\n      return moment(datestring,'DD-MM-YYYY').format('YYYY-MM-DD')\r\n    }\r\n    \r\n    function toDBDate(datestring) {\r\n      return moment(datestring,'YYYY-MM-DD').format('YYYY-MM-DD')\r\n    }\r\n    \r\n\r\n    const theme = createMuiTheme({\r\n      overrides: {\r\n        // Style sheet name ⚛️\r\n        MuiMenuItem: {\r\n          // Name of the rule\r\n          root: {\r\n            // Some CSS\r\n            fontSize: 15,\r\n          },\r\n        },\r\n        MuiSelect:{\r\n          root: {\r\n            // Some CSS\r\n            fontSize: 15,\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          root: {\r\n           padding:2,\r\n          }\r\n        },\r\n        MuiTableRow: {\r\n          root: {\r\n            \"&:hover\": {\r\n              backgroundColor: \"rgba(33, 150, 243, 0.5)\"\r\n            }\r\n          }\r\n        },\r\n        MuiExpansionPanel :{\r\n          root: {\r\n            fontSize: 11,\r\n            border: '1px solid rgba(0, 0, 0, .125)',\r\n            boxShadow: 'none',\r\n            '&:not(:last-child)': {\r\n              borderBottom: 0,\r\n            },\r\n            '&:before': {\r\n              display: 'none',\r\n            },\r\n            '&$expanded': {\r\n              margin: 'auto',\r\n            },\r\n          },\r\n        },\r\n        ExpansionPanelSummary :{\r\n          root: {\r\n            fontSize: 11,\r\n            backgroundColor: 'rgba(0, 0, 0, .03)',\r\n            borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n            marginBottom: -1,\r\n            minHeight: 56,\r\n            '&$expanded': {\r\n              minHeight: 44,\r\n            },\r\n          },\r\n          content: {\r\n            fontSize: 11,\r\n            margin:10,\r\n            '&$expanded': {\r\n              margin: 10,\r\n            },\r\n          },\r\n        },\r\n        MuiExpansionPanelDetails:{\r\n          root: {\r\n            padding:'2px',\r\n            fontSize: 11\r\n          }\r\n        },\r\n        MuiTypography:{\r\n          body1:{\r\n            fontSize: 15,\r\n          }\r\n        },\r\n        MuiExpansionPanelSummary:{\r\n          root:{\r\n            padding:2\r\n          },\r\n          content: {\r\n            fontSize: 11,\r\n            margin:10,\r\n            '&$expanded': {\r\n              margin: 5,\r\n            },\r\n          },\r\n        },\r\n        MuiDialogTitle:{\r\n          root:{\r\n            padding: '10px 10px',\r\n            color:'#ffffff'\r\n  \r\n          }\r\n        },\r\n        MuiDialog:{\r\n          paperWidthSm:{\r\n            maxWidth:800\r\n          }\r\n        },\r\n        MuiDialogContent:{\r\n          root:{\r\n            padding:'0px'\r\n          }\r\n        }\r\n      },\r\n    });\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        width: '100%',\r\n        paddingLeft:'5%',\r\n      },\r\n      div_root:{\r\n        width: '100%',\r\n        size:'sm',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n      TableCell_custom:{\r\n        padding:5,\r\n        fontSize:12\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n      closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: 4,\r\n        color: theme.palette.grey[500],\r\n      },\r\n      checkButton: {\r\n        marginTop:36,\r\n        padding:0\r\n      },\r\n      viewDioTitle:{\r\n        backgroundColor:'#3f51b5',\r\n        color:'#fffff !important',\r\n      },\r\n      viewFormaValidationDioTitle:{\r\n        backgroundColor:'#e53935',\r\n        color:'#fffff !important',\r\n      },\r\n      TableRowBackgroundColor:{\r\n        '&:hover': {\r\n          backgroundColor: '#fab700',\r\n        },\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '100%',\r\n        fontSize:15\r\n      },\r\n      formErrorColor: {\r\n       color:\"red\"\r\n      },\r\n      formPaddingTop:{\r\n        paddingTop:9\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      datetextField: {\r\n        paddingTop:'10px',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 271,\r\n      },\r\n      timetextField: {\r\n        paddingTop:'10px',\r\n      },\r\n      GridPaddingTop:{\r\n        paddingTop:'36px'\r\n      },\r\n      tableRow: {\r\n        hover: {\r\n           backgroundColor:'#eed35a',\r\n          }\r\n       },\r\n       custom_fontsize:{\r\n        fontSize:15\r\n       },\r\n       icon_color:{\r\n         color:\"#f50057\"\r\n       },\r\n       icon_add_color:{\r\n        color:\"#1976d2\"\r\n      }\r\n       \r\n    }));\r\n  \r\n\r\nconst emptyObj = {\r\n  ID :'',\r\n  Date_Raised:'',\r\n  Bug_Id:'',\r\n  Snow_No:'',\r\n  Description:'',\r\n  Type:'',\r\n  Status:'',\r\n  Hotfix_Date:'',\r\n  Production_Date:'',\r\n  Comments:'',\r\n}\r\n\r\nconst assignEmptyValues = (rows)=> {\r\n  return rows.map(row => Object.assign({},emptyObj,row));\r\n}\r\n\r\nexport default function BugReport() {\r\n    const classes = useStyles();\r\n    const [rows,setRows] = React.useState([]);\r\n    const [selectedRow, setSelectedRow] = React.useState(null);\r\n    const [rowData,setRowData] = React.useState({});\r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const [addopen, setAddOpen] = React.useState(false);\r\n    const [isLoading,setIsLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [alertdeleteopen,setAlertDeleteOpen] = React.useState(false);\r\n    const [formvalidationopen,setFormValidationOpen] = React.useState(false);\r\n    const [formerrorvalidationopen,setFormErrorValidationOpen] = React.useState(false);\r\n    const [isDeleteLoading,setIsDeleteLoading] = React.useState(false);\r\n    const [isLoadingDialog,setIsLoadingDialog] = React.useState(false);\r\n    const [formvalidationerrors,setFormValidationErrors] = React.useState({});\r\n    const [tabvalue, setTabValue] = React.useState('1');\r\n\r\n    //set field values\r\n    const setFieldValue = (name,value) =>{\r\n      const updated = {\r\n        ...rowData,\r\n        [name] : value\r\n      }\r\n      setRowData(updated);\r\n    }\r\n\r\n    const handleBugDateChange = (date) => {\r\n      if(date === null)\r\n      setFieldValue(\"Date_Raised\",\"\")\r\n      else\r\n      setFieldValue(\"Date_Raised\",toDBDate(date))\r\n    };\r\n    const handleHotfixDateChange = (date) => {\r\n      if(date === null)\r\n      setFieldValue(\"Hotfix_Date\",\"\")\r\n      else\r\n      setFieldValue(\"Hotfix_Date\",toDBDate(date))\r\n    };\r\n    const handleProductionDateChange = (date) => {\r\n      if(date === null)\r\n      setFieldValue(\"Production_Date\",\"\")\r\n      else\r\n      setFieldValue(\"Production_Date\",toDBDate(date))\r\n    };\r\n    \r\n    \r\n    // Ajax Call Starts here\r\n    React.useEffect(() => {\r\n      setIsLoading(true);\r\n      fetch(bugreport_url)\r\n      .then(res => res.json())\r\n      .then((result)=>{\r\n        setRows(assignEmptyValues(result));\r\n      }).catch((error) =>{\r\n        console.log(error);\r\n      })\r\n      .finally(()=>{\r\n        setIsLoading(false);\r\n      })\r\n    },[]\r\n    )\r\n\r\n    const handleEditClickOpen = (selectedRow,rowData) => {\r\n      setSelectedRow(selectedRow);\r\n      setRowData(Object.assign({},emptyObj,{\r\n        \"ID\":rowData.ID,\r\n        \"Date_Raised\":rowData.Date_Raised,\r\n        \"Bug_Id\":rowData.Bug_Id,\r\n        \"Snow_No\":rowData.Snow_No,\r\n        \"Description\":rowData.Description,\r\n        \"Type\":rowData.Type,\r\n        \"Status\":rowData.Status,\r\n        \"Hotfix_Date\":(rowData.Hotfix_Date == \"\") ? null : rowData.Hotfix_Date,\r\n        \"Production_Date\":(rowData.Production_Date == \"\") ? null : rowData.Production_Date,\r\n        \"Comments\":rowData.Comments,\r\n      }));\r\n      console.log(\"Before open edit data -->\"+JSON.stringify(rowData));\r\n      setEditOpen(true); \r\n    };\r\n\r\n    const handleAddClickOpen = () => {\r\n      setRowData(Object.assign({},emptyObj,{\r\n        \"Date_Raised\":moment().format('YYYY-MM-DD'),\r\n        \"Bug_Id\":\"\",\r\n        \"Snow_No\":\"\",\r\n        \"Description\":\"\",\r\n        \"Type\":\"\",\r\n        \"Status\":\"\",\r\n        \"Hotfix_Date\":null,\r\n        \"Production_Date\":null,\r\n        \"Comments\":\"\",\r\n      }));\r\n      setAddOpen(true); \r\n    };\r\n    \r\n    //Delete Popup alert\r\n    const HandleDeleteMaintenanceOpen = (selectedRow) =>{\r\n      var temp = '';\r\n      for (var i = 0; i < selectedRow.length; i++) {\r\n        var object = selectedRow[i];\r\n        for (var property in object) {\r\n          if(property === 'ID'){\r\n            temp = temp += object[property]+',';\r\n          }\r\n        }\r\n      }\r\n      setSelected(temp.replace(/,\\s*$/, \"\"))\r\n      setAlertDeleteOpen(true);\r\n    }\r\n\r\n    const handleAlertDeleteClose = () =>{\r\n      setAlertDeleteOpen(false);\r\n    }\r\n    \r\n    const handleAlertDeleteCancelClose = () =>{\r\n      setAlertDeleteOpen(false);\r\n    }\r\n       \r\n    const handleAlertDeleteSuccessOpen = () =>{\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"headerStyle\":\"classes.viewDioTitle\",\"title\":\"Validation success\",\"message\":\" Selected record deleted successfully\"})\r\n    }\r\n    const handleAlertFormValidationClose = () =>{\r\n      setFormValidationOpen(false);\r\n    }\r\n    const handleAlertErrorFormValidationClose = () =>{\r\n      setFormErrorValidationOpen(false);\r\n    }\r\n\r\n    const HandleAddBugReportClose = () =>{\r\n      setAddOpen(false);\r\n    }\r\n    const HandleEditBugReportClose = () =>{\r\n      setEditOpen(false);\r\n    }\r\n\r\nconst handleDeleteSubmitClose = (items) => {\r\n  //alert(\"selected check box items\"+items.selected);\r\n  setIsDeleteLoading(true);\r\n  fetch(bugreport_url+items.selected, { \r\n    method: \"DELETE\",\r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response => response.json()) \r\n  .then(result => {\r\n    if(result.success === 1){\r\n      MaintenanceLoadingAfterSuccess();\r\n      setAlertDeleteOpen(false);\r\n      handleAlertDeleteSuccessOpen();\r\n      setSelected([]);\r\n    }else{\r\n      alert(\"Technical error occurred. please contact admin team.\")\r\n    }\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsDeleteLoading(false);\r\n  });        \r\n}\r\n\r\nconst MaintenanceLoadingAfterSuccess = () =>{\r\n  setIsLoading(true);\r\n  fetch(bugreport_url)\r\n  .then(res => res.json())\r\n  .then((result)=>{\r\n    setRows(result);\r\n    \r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  })\r\n}\r\n\r\nconst handleAddSubmitClose = () => {\r\n  setIsLoading(true);\r\n  fetch(bugreport_url, {\r\n    method: \"POST\", \r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response =>  response.json())\r\n  .then(result => {\r\n    if(result.error === 409){\r\n      setFormErrorValidationOpen(true);\r\n      setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Add Failed\",\"message\":\" Bug report already exists\"})\r\n    }else{\r\n      setFormValidationOpen(true);\r\n      setFormValidationErrors({\"headerStyle\":\"classes.viewDioTitle\",\"title\":\"Add success\",\"message\":\" Bug report added successfully\"});\r\n      MaintenanceLoadingAfterSuccess();\r\n    }\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  }); \r\n  setAddOpen(false);\r\n}\r\n\r\nconst handleEditSubmitClose = () => {\r\n  setIsLoading(true);\r\n  console.log(\"Before submit--->\"+JSON.stringify(rowData));\r\n  fetch(bugreport_url+rowData.ID, { \r\n    method: \"PATCH\", \r\n    body: JSON.stringify(rowData), \r\n    headers: { \r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n  }) \r\n  .then(response => response.json()) \r\n  .then(result => {\r\n    setFormValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Edit success\",\"message\":\" Bug report updated successfully\"});\r\n    MaintenanceLoadingAfterSuccess();\r\n  }).catch((error) =>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    setIsLoading(false);\r\n  }); \r\nsetEditOpen(false);\r\n\r\n}\r\n\r\n\r\nconst handleFormSubmit = (event,title) =>{\r\n\r\n  if(rowData.Date_Raised === \"\"){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\" Please select date raised\"})\r\n    event.preventDefault();\r\n  }\r\n  else if(rowData.Bug_Id === \"\"){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\"Please enter bug id\"})\r\n    event.preventDefault();\r\n  }\r\n\r\n  else if(rowData.Snow_No === \"\"){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\" Please enter snow number\"})\r\n    event.preventDefault();\r\n  }\r\n  else if(rowData.Type === \"\"){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\" Please select type\"})\r\n    event.preventDefault();\r\n  }\r\n  else if(rowData.Status === \"\"){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\" Please select status\"})\r\n    event.preventDefault();\r\n  }\r\n  else if(rowData.Hotfix_Date !==null && (!moment(rowData.Hotfix_Date).isSameOrAfter(moment(rowData.Date_Raised)))){\r\n    setFormErrorValidationOpen(true);\r\n      setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\"Bug hotfix date should be equal or after bug date\"})\r\n      event.preventDefault();\r\n  } \r\n  else if(((rowData.Production_Date !== null && rowData.Hotfix_Date !== null) && (!moment(rowData.Production_Date).isSameOrAfter(moment(rowData.Hotfix_Date))))){\r\n    setFormErrorValidationOpen(true);\r\n    setFormValidationErrors({\"headerStyle\":\"classes.viewFormaValidationDioTitle\",\"title\":\"Validation falied\",\"message\":\"Production date should be equal or after hot fix date\"})\r\n    event.preventDefault();\r\n} \r\n  else{\r\n    if(title === \"Add\"){\r\n      handleAddSubmitClose();\r\n    }\r\n    else{\r\n      handleEditSubmitClose();\r\n    }\r\n   \r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n    {\r\n        isLoading && \r\n        <LinearProgress color=\"secondary\"/>\r\n    }\r\n    <MaterialTable\r\n      title=\"Bug Report\"\r\n      columns={[\r\n        { title: 'ID', field: 'ID',width: '2%', filtering: false },\r\n        { title: 'Date', field: 'Date_Raised',width: '8%',defaultSort:'desc' },\r\n        { title: 'Bug#', field: 'Bug_Id',width: '5%' },\r\n        { title: 'SNOW#', field: 'Snow_No',width: '8%'  },\r\n        { title: 'Type', field: 'Type',width: '8%' },\r\n        { title: 'Status', field: 'Status',width: '8%' },\r\n        { title: 'Hotfix Date', field: 'Hotfix_Date',width: '11%' },\r\n        { title: 'Prod Date', field: 'Production_Date',width: '8%' },\r\n        { title: 'Description', field: 'Description',width: '42%' }\r\n      ]}\r\n      data={rows}\r\n      onRowClick={((evt, selectedRow) => handleEditClickOpen(selectedRow.tableData.id,selectedRow))}\r\n      options={{\r\n        selection: true,\r\n          filtering: true,\r\n          headerStyle: {\r\n            backgroundColor: '#5c6fd6',\r\n            color: '#FFF'\r\n          },\r\n          rowStyle: rowData => ({\r\n            backgroundColor: (selectedRow === rowData.tableData.id) ? '#ddcd74' : '#ffffff'\r\n          }),\r\n          pageSize:10,\r\n          pageSizeOptions:[10,20,30,40,50]  \r\n      }}\r\n      localization={{\r\n        pagination: {\r\n            labelDisplayedRows: '{from}-{to} of {count}'\r\n        },\r\n        toolbar: {\r\n            nRowsSelected: '{0} row(s) selected'\r\n        },\r\n        header: {\r\n            actions: 'Actions'\r\n        },\r\n        body: {\r\n            emptyDataSourceMessage: 'No records to display',\r\n            filterRow: {\r\n                filterTooltip: 'Filter'\r\n            }\r\n        }\r\n    }}\r\n    actions={[\r\n      {\r\n        tooltip: 'Remove All Selected Users',\r\n        icon: 'delete',\r\n        onClick: (evt, data) => { HandleDeleteMaintenanceOpen(data) }\r\n       },\r\n      {\r\n        icon: () => { return <AddCircleIcon className={classes.icon_add_color}/> },\r\n        tooltip: 'Add New Ticket',\r\n        isFreeAction: true,\r\n        onClick: (event) => { handleAddClickOpen() }\r\n      }\r\n    ]}\r\n    />\r\n    {/* custom alert dialog content -->start here */}\r\n    <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={alertdeleteopen}\r\n        onClose={handleAlertDeleteClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = {'xs'}\r\n        fullWidth={true}\r\n        position = \"top\"\r\n        TransitionComponent={TransitionLeft}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle} >\r\n        {\"Delete\"}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertDeleteClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        {\r\n            isDeleteLoading && \r\n            <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure want to delete selected bug ticket(s) ? \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertDeleteCancelClose} variant=\"contained\" color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button variant=\"contained\" value={selected} onClick={()=>handleDeleteSubmitClose({selected})} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={formvalidationopen}\r\n        onClose={handleAlertFormValidationClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={true}\r\n        maxWidth = {'xs'}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewDioTitle}>\r\n        {formvalidationerrors.title}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertFormValidationClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {formvalidationerrors.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertFormValidationClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n      {/* custom alert dialog content -->start here */}\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={formerrorvalidationopen}\r\n        onClose={handleAlertErrorFormValidationClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={true}\r\n        maxWidth = {'xs'}\r\n        TransitionComponent={TransitionUp}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.viewFormaValidationDioTitle}>\r\n        {formvalidationerrors.title}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleAlertErrorFormValidationClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {formvalidationerrors.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleAlertErrorFormValidationClose}  variant=\"contained\" color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* custom alert dialog content -->end here */}\r\n\r\n\r\n      {/* edit dialog content -->start here */}\r\n    <form noValidate>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'sm'} \r\n        onClose={HandleEditBugReportClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={editopen}\r\n        >\r\n        {/* <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Add \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddMaintenanceClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle> */}\r\n        <DialogContent style={{padding:'0px 0px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n        <TabContext value={tabvalue}>\r\n        <AppBar position=\"static\">\r\n          <TabList aria-label=\"simple tabs example\">\r\n            <Tab label=\"Edit\" value=\"1\" />\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleEditBugReportClose}>\r\n            <CloseIcon />\r\n            </IconButton>\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\">\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      error={!rowData.Date_Raised}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"Date Raised\"\r\n                      value = {rowData.Date_Raised}\r\n                      onChange={handleBugDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.Date_Raised &&  \"Please enter valid bug date.\"}\r\n\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Bug_Id}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Bug_Id\"\r\n                label=\"Bug Id\"\r\n                name=\"Bug_Id\"\r\n                autoComplete=\"Bug_Id\"\r\n                value={rowData.Bug_Id}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Bug_Id',event.target.value)}\r\n                helperText={!rowData.Bug_Id &&  \"Please enter bug id.\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Snow_No}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Snow_No\"\r\n                label=\"Service Now Number\"\r\n                name=\"Snow_No\"\r\n                autoComplete=\"Snow_No\"\r\n                value={rowData.Snow_No}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Snow_No',event.target.value)}\r\n                helperText={!rowData.Snow_No &&  \"Please enter snow number.\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n             <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Type && <span>Bug Type *</span>}{!rowData.Type && <span className={classes.formErrorColor}>Bug Type *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Type}\r\n                onChange={(event)=>setFieldValue('Type',event.target.value)}\r\n                label=\"Type *\"\r\n                required\r\n                error={!rowData.Type}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Bug Type  *</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Bug\">Bug</MenuItem>\r\n                <MenuItem value=\"Invalid\">Invalid</MenuItem>\r\n              </Select>\r\n              {!rowData.Type  && <FormHelperText className={classes.formErrorColor}>Please select bug type.</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n             <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Status && <span>Bug Status *</span>}{!rowData.Status && <span className={classes.formErrorColor}>Bug Status *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Status}\r\n                onChange={(event)=>setFieldValue('Status',event.target.value)}\r\n                label=\"Status *\"\r\n                required\r\n                error={!rowData.Type}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Bug Status  *</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Open\">Open</MenuItem>\r\n                <MenuItem value=\"Closed\">Closed</MenuItem>\r\n              </Select>\r\n              {!rowData.Type  && <FormHelperText className={classes.formErrorColor}>Please select bug status.</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3} >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDatePicker\r\n                      //error={!rowData.Hotfix_Date}\r\n                      className={classes.Hotfix_Date}\r\n                      //variant=\"inline\"\r\n                      label=\"Hotfix Date\"\r\n                      value = {rowData.Hotfix_Date}\r\n                      onChange={handleHotfixDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Hotfix_Date &&  \"Please enter valid hotfix date.\"}\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDatePicker\r\n                      //error={!rowData.Production_Date}\r\n                      className={classes.Production_Date}\r\n                      //variant=\"inline\"\r\n                      label=\"Production Date\"\r\n                      value = {rowData.Production_Date}\r\n                      onChange={handleProductionDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Production_Date &&  \"Please enter valid prod date.\"}\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n             <TextField\r\n               // error={!rowData.Description}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"Description\"\r\n                label=\"Description\"\r\n                name=\"Description\"\r\n                autoComplete=\"Description\"\r\n                value={rowData.Description}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Description',event.target.value)}\r\n               // helperText={!rowData.Description &&  \"Please enter description.\"}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                //error={!rowData.Comments}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"Comments\"\r\n                label=\"Comments\"\r\n                name=\"Comments\"\r\n                autoComplete=\"Comments\"\r\n                value={rowData.Comments}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Comments',event.target.value)}\r\n                //helperText={!rowData.Comments &&  \"Please enter comments.\"}\r\n          />\r\n             </Grid>\r\n\r\n            </Grid>\r\n        </TabPanel>\r\n      </TabContext> \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleEditBugReportClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={(event)=>handleFormSubmit(event,\"Edit\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </form>\r\n      {/* edit dialog content -->end here */}\r\n\r\n      {/* edit dialog content -->start here */}\r\n    <form noValidate>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        scroll={'paper'}\r\n        fullWidth={true} \r\n        maxWidth = {'sm'} \r\n        onClose={HandleAddBugReportClose} \r\n        aria-labelledby=\"customized-dialog-title\" \r\n        open={addopen}\r\n        >\r\n        {/* <DialogTitle id=\"customized-dialog-title\" className={classes.viewDioTitle}>\r\n          Add \r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddMaintenanceClose}>\r\n          <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle> */}\r\n        <DialogContent style={{padding:'0px 0px'}}>\r\n        {\r\n        isLoadingDialog && \r\n        <LinearProgress color=\"secondary\"/>\r\n        }\r\n        <div className={classes.div_root}>\r\n        <TabContext value={tabvalue}>\r\n        <AppBar position=\"static\">\r\n          <TabList aria-label=\"simple tabs example\">\r\n            <Tab label=\"Edit\" value=\"1\" />\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={HandleAddBugReportClose}>\r\n            <CloseIcon />\r\n            </IconButton>\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\">\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                      error={!rowData.Date_Raised}\r\n                      className={classes.datetextField}\r\n                      //variant=\"inline\"\r\n                      label=\"Date Raised\"\r\n                      value = {rowData.Date_Raised}\r\n                      onChange={handleBugDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      helperText={!rowData.Date_Raised &&  \"Please enter valid bug date.\"}\r\n\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Bug_Id}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Bug_Id\"\r\n                label=\"Bug Id\"\r\n                name=\"Bug_Id\"\r\n                autoComplete=\"Bug_Id\"\r\n                value={rowData.Bug_Id}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Bug_Id',event.target.value)}\r\n                helperText={!rowData.Bug_Id &&  \"Please enter bug id.\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n             <TextField\r\n                error={!rowData.Snow_No}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Snow_No\"\r\n                label=\"Service Now Number\"\r\n                name=\"Snow_No\"\r\n                autoComplete=\"Snow_No\"\r\n                value={rowData.Snow_No}\r\n                hidden ={true}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Snow_No',event.target.value)}\r\n                helperText={!rowData.Snow_No &&  \"Please enter snow number.\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n             <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Type && <span>Bug Type *</span>}{!rowData.Type && <span className={classes.formErrorColor}>Bug Type *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Type}\r\n                onChange={(event)=>setFieldValue('Type',event.target.value)}\r\n                label=\"Type *\"\r\n                required\r\n                error={!rowData.Type}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Bug Type  *</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Bug\">Bug</MenuItem>\r\n                <MenuItem value=\"Invalid\">Invalid</MenuItem>\r\n              </Select>\r\n              {!rowData.Type  && <FormHelperText className={classes.formErrorColor}>Please select bug type.</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n             <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{rowData.Status && <span>Bug Status *</span>}{!rowData.Status && <span className={classes.formErrorColor}>Bug Status *</span>}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={rowData.Status}\r\n                onChange={(event)=>setFieldValue('Status',event.target.value)}\r\n                label=\"Status *\"\r\n                required\r\n                error={!rowData.Type}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Bug Status  *</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Open\">Open</MenuItem>\r\n                <MenuItem value=\"Closed\">Closed</MenuItem>\r\n              </Select>\r\n              {!rowData.Type  && <FormHelperText className={classes.formErrorColor}>Please select bug status.</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3} >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDatePicker\r\n                      //error={!rowData.Hotfix_Date}\r\n                      className={classes.Hotfix_Date}\r\n                      //variant=\"inline\"\r\n                      label=\"Hotfix Date\"\r\n                      value = {rowData.Hotfix_Date}\r\n                      onChange={handleHotfixDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Hotfix_Date &&  \"Please enter valid hotfix date.\"}\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" className={classes.formPaddingTop}>\r\n                    <KeyboardDatePicker\r\n                      //error={!rowData.Production_Date}\r\n                      className={classes.Production_Date}\r\n                      //variant=\"inline\"\r\n                      label=\"Production Date\"\r\n                      value = {rowData.Production_Date}\r\n                      onChange={handleProductionDateChange}\r\n                      onError={console.log}\r\n                      format=\"yyyy-MM-dd\"\r\n                      // KeyboardButtonProps={{\r\n                      //   'aria-label': 'change date',\r\n                      // }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          input: classes.custom_fontsize,\r\n                        },\r\n                      }}\r\n                      //helperText={!rowData.Production_Date &&  \"Please enter valid prod date.\"}\r\n                    />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n             <TextField\r\n               // error={!rowData.Description}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"Description\"\r\n                label=\"Description\"\r\n                name=\"Description\"\r\n                autoComplete=\"Description\"\r\n                value={rowData.Description}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Description',event.target.value)}\r\n               // helperText={!rowData.Description &&  \"Please enter description.\"}\r\n          />\r\n             </Grid>\r\n             <Grid item xs={12}>\r\n             <TextField\r\n                //error={!rowData.Comments}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                id=\"Comments\"\r\n                label=\"Comments\"\r\n                name=\"Comments\"\r\n                autoComplete=\"Comments\"\r\n                value={rowData.Comments}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.custom_fontsize,\r\n                  },\r\n                }}\r\n                onChange={(event)=>setFieldValue('Comments',event.target.value)}\r\n                //helperText={!rowData.Comments &&  \"Please enter comments.\"}\r\n          />\r\n             </Grid>\r\n\r\n            </Grid>\r\n        </TabPanel>\r\n      </TabContext> \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={HandleAddBugReportClose} variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button  onClick={(event)=>handleFormSubmit(event,\"Add\")} variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </form>\r\n      {/* add dialog content -->end here */}\r\n\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './NavBar';\r\nimport TicketMasterIntensify from './components/Ticket-Master-Intensify';\r\nimport ChartsShowcase from './components/Charts-Showcase';\r\nimport Maintenance from './components/Maintenance';\r\nimport BugReport from './components/BugReport';\r\nimport { Switch,Route,Redirect } from 'react-router-dom';\r\nimport store from 'store';\r\n\r\nfunction Home() {\r\n    if (!store.get('loggedIn')) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n  return (\r\n    <div className=\"App\">\r\n        <NavBar/>\r\n        <Switch>\r\n          <Route path=\"/\" exact component = { TicketMasterIntensify }></Route>\r\n          <Route path=\"/TicketMaster\" exact component = { TicketMasterIntensify }></Route>\r\n          <Route path=\"/ChartsShowcase\" exact component = { ChartsShowcase }></Route>\r\n          <Route path=\"/Maintenance\" exact component = { Maintenance }></Route>\r\n          <Route path=\"/BugReport\" exact component = { BugReport }></Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport CCSSignIn from './components/CCS-Login';\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom'\nimport  Home  from './Home';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" exact component = { CCSSignIn }></Route>\n          <Route path=\"/\" component = { Home }></Route>\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n// );\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}